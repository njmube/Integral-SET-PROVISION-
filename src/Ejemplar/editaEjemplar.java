package Ejemplar;

import Catalogo.buscaCatalogo;
import Hibernate.Util.HibernateUtil;
import Hibernate.entidades.Catalogo;
import Hibernate.entidades.Ejemplar;
import Hibernate.entidades.Grupo;
import Hibernate.entidades.Marca;
import Hibernate.entidades.Tipo;
import Hibernate.entidades.Usuario;
import Integral.ExtensionFileFilter;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.List;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.criterion.Restrictions;
import Integral.Herramientas;
import Integral.Imagen;
import Integral.Render1;
import java.awt.Container;
import java.awt.Desktop;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Window;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;

public class editaEjemplar extends javax.swing.JPanel {

    private Session session;
    private Ejemplar actor;
    DefaultTableModel model;
    Marca marca;
    Grupo grupo;
    Catalogo catalogo;
    String[] columnas = new String [] {"Clave","Marca","Grupo", "Descripción", "Comentarios", "Medida","Precio","Dolar","Max","Min","Exist","Ubicacion"};
    String[] columnas0 = new String [] {"Clave","Marca","Grupo", "Descripción", "Comentarios", "Medida","Precio", "Dolar"};
    ArrayList lista_id=new ArrayList();
    String[] marc;
    String[] grup;
    int[] catalog;
    Usuario usr;
    String sessionPrograma="";
    Herramientas h;
    public String NS="";
    int x=0;
    int entro_foto=0;
    File archivo=null;
    String nombreFoto="";
    int inventario=0;
    int configuracion=1;
    
    public editaEjemplar(Usuario usuario, String ses, int inventario, int configuracion) 
    {
        initComponents();
        this.configuracion=configuracion;
        this.inventario=inventario;
        t_precio.setValue(0.00);
        cargaMarca();
        cargaGrupo();
        sessionPrograma=ses;
        formatoTabla();
        usr=usuario;
        buscaDato();
        borra_cajas();
        habilita_cajas(false);
        if(inventario==0)
        {
            l_minimo.setVisible(false);
            l_maximo.setVisible(false);
            t_minimo.setVisible(false);
            t_maximo.setVisible(false);
            t_existencia.setVisible(false);
            l_ubicacion.setVisible(false);
            t_ubicacion.setVisible(false);
        }
    }
    
    DefaultTableModel ModeloTablaReporte(int renglones, String columnas[])
    {
        model = new DefaultTableModel(new Object [renglones][13], columnas)
        {
            Class[] types = new Class [] {
                java.lang.Integer.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.Double.class,
                java.lang.Boolean.class,
                java.lang.Double.class,
                java.lang.Double.class,
                java.lang.Double.class,
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false,false,false,false,false,false, false, false, false, false, false, false
            };
            public void setValueAt(Object value, int row, int col)
            {
                Vector vector = (Vector)this.dataVector.elementAt(row);
                Object celda = ((Vector)this.dataVector.elementAt(row)).elementAt(col);
                switch(col)
                {
                    default:
                        vector.setElementAt(value, col);
                        this.dataVector.setElementAt(vector, row);
                        fireTableCellUpdated(row, col);
                        break;
                }
            }
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];  
            }
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        return model;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_datos = new javax.swing.JTable();
        Selecciona2 = new javax.swing.JButton();
        Eliminar1 = new javax.swing.JButton();
        Selecciona1 = new javax.swing.JButton();
        bt_actualiza1 = new javax.swing.JButton();
        t_busca = new javax.swing.JTextField();
        b_busca = new javax.swing.JButton();
        bt_actualiza2 = new javax.swing.JButton();
        cb_busca = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        t_numero = new javax.swing.JTextField();
        l_marca = new javax.swing.JLabel();
        c_marca = new javax.swing.JComboBox();
        l_tipo = new javax.swing.JLabel();
        c_grupo = new javax.swing.JComboBox();
        l_catalogo = new javax.swing.JLabel();
        b_guardar = new javax.swing.JButton();
        b_cancelar = new javax.swing.JButton();
        t_catalogo = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        t_comentario = new javax.swing.JTextArea();
        p_foto = new javax.swing.JPanel();
        medida = new javax.swing.JComboBox();
        l_tipo1 = new javax.swing.JLabel();
        l_modelo1 = new javax.swing.JLabel();
        t_precio = new javax.swing.JFormattedTextField();
        l_minimo = new javax.swing.JLabel();
        l_maximo = new javax.swing.JLabel();
        t_minimo = new javax.swing.JFormattedTextField();
        t_maximo = new javax.swing.JFormattedTextField();
        cb_moneda = new javax.swing.JCheckBox();
        l_ubicacion = new javax.swing.JLabel();
        t_ubicacion = new javax.swing.JTextField();
        t_id_catalogo = new javax.swing.JTextField();
        l_ubicacion1 = new javax.swing.JLabel();
        c_tipo = new javax.swing.JComboBox();
        b_buscar_catalogo = new javax.swing.JButton();
        l_minimo1 = new javax.swing.JLabel();
        t_existencia = new javax.swing.JFormattedTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Edita de Ejemplares", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Lista", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 11))); // NOI18N

        t_datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clave", "Marca", "Grupo", "Partida", "Descripcion", "Foto", "Ubicacion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        t_datos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        t_datos.getTableHeader().setReorderingAllowed(false);
        t_datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t_datosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(t_datos);

        Selecciona2.setBackground(new java.awt.Color(2, 135, 242));
        Selecciona2.setForeground(new java.awt.Color(254, 254, 254));
        Selecciona2.setIcon(new ImageIcon("imagenes/add-user.png"));
        Selecciona2.setText("Nuevo");
        Selecciona2.setToolTipText("Agregar un registo actual");
        Selecciona2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Selecciona2.setMaximumSize(new java.awt.Dimension(87, 23));
        Selecciona2.setMinimumSize(new java.awt.Dimension(87, 23));
        Selecciona2.setNextFocusableComponent(b_cancelar);
        Selecciona2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Selecciona2ActionPerformed(evt);
            }
        });

        Eliminar1.setBackground(new java.awt.Color(2, 135, 242));
        Eliminar1.setForeground(new java.awt.Color(254, 254, 254));
        Eliminar1.setIcon(new ImageIcon("imagenes/del-user.png"));
        Eliminar1.setText("Eliminar");
        Eliminar1.setToolTipText("Eliminar el registro actual");
        Eliminar1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Eliminar1.setMaximumSize(new java.awt.Dimension(87, 23));
        Eliminar1.setMinimumSize(new java.awt.Dimension(87, 23));
        Eliminar1.setNextFocusableComponent(Selecciona2);
        Eliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Eliminar1ActionPerformed(evt);
            }
        });

        Selecciona1.setBackground(new java.awt.Color(2, 135, 242));
        Selecciona1.setForeground(new java.awt.Color(254, 254, 254));
        Selecciona1.setIcon(new ImageIcon("imagenes/update-user.png"));
        Selecciona1.setText("Seleccionar");
        Selecciona1.setToolTipText("Seleccionar un registro de la tabla para editar");
        Selecciona1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Selecciona1.setNextFocusableComponent(Eliminar1);
        Selecciona1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Selecciona1ActionPerformed(evt);
            }
        });

        bt_actualiza1.setBackground(new java.awt.Color(2, 135, 242));
        bt_actualiza1.setForeground(new java.awt.Color(254, 254, 254));
        bt_actualiza1.setIcon(new ImageIcon("imagenes/tabla.png"));
        bt_actualiza1.setText("Actualizar");
        bt_actualiza1.setToolTipText("Actualizar los datos de la tabla");
        bt_actualiza1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bt_actualiza1.setMaximumSize(new java.awt.Dimension(87, 23));
        bt_actualiza1.setMinimumSize(new java.awt.Dimension(87, 23));
        bt_actualiza1.setNextFocusableComponent(Selecciona1);
        bt_actualiza1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_actualiza1ActionPerformed(evt);
            }
        });

        t_busca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_buscaActionPerformed(evt);
            }
        });

        b_busca.setIcon(new ImageIcon("imagenes/buscar1.png"));
        b_busca.setToolTipText("Busca una partida");
        b_busca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_buscaActionPerformed(evt);
            }
        });

        bt_actualiza2.setBackground(new java.awt.Color(2, 135, 242));
        bt_actualiza2.setForeground(new java.awt.Color(254, 254, 254));
        bt_actualiza2.setIcon(new ImageIcon("imagenes/guardar-documento.png"));
        bt_actualiza2.setText("Exportar");
        bt_actualiza2.setToolTipText("Actualizar los datos de la tabla");
        bt_actualiza2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bt_actualiza2.setMaximumSize(new java.awt.Dimension(87, 23));
        bt_actualiza2.setMinimumSize(new java.awt.Dimension(87, 23));
        bt_actualiza2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_actualiza2ActionPerformed(evt);
            }
        });

        cb_busca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CLAVE", "DESCRIPCION" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bt_actualiza2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_actualiza1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Selecciona1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Eliminar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Selecciona2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(cb_busca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_busca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_busca, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(t_busca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cb_busca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(b_busca, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Selecciona2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Eliminar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Selecciona1)
                    .addComponent(bt_actualiza1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_actualiza2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(254, 254, 254));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Actualizar", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 11))); // NOI18N

        jLabel20.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 51, 255));
        jLabel20.setText("No° parte");

        t_numero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_numeroKeyTyped(evt);
            }
        });

        l_marca.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        l_marca.setText("Marca:");

        l_tipo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        l_tipo.setText("Linea:");

        l_catalogo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        l_catalogo.setText("Partida Valuacion:");

        b_guardar.setBackground(new java.awt.Color(2, 135, 242));
        b_guardar.setForeground(new java.awt.Color(254, 254, 254));
        b_guardar.setIcon(new ImageIcon("imagenes/guardar.png"));
        b_guardar.setText("Actualizar");
        b_guardar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_guardar.setMaximumSize(new java.awt.Dimension(87, 23));
        b_guardar.setMinimumSize(new java.awt.Dimension(87, 23));
        b_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_guardarActionPerformed(evt);
            }
        });

        b_cancelar.setBackground(new java.awt.Color(2, 135, 242));
        b_cancelar.setForeground(new java.awt.Color(254, 254, 254));
        b_cancelar.setIcon(new ImageIcon("imagenes/cancelar.png"));
        b_cancelar.setText("Cancelar");
        b_cancelar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_cancelar.setMaximumSize(new java.awt.Dimension(87, 23));
        b_cancelar.setMinimumSize(new java.awt.Dimension(87, 23));
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        t_catalogo.setEnabled(false);
        t_catalogo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_catalogoKeyTyped(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(254, 254, 254));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 255), 1, true), "Descripción:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 51, 255))); // NOI18N

        t_comentario.setColumns(20);
        t_comentario.setRows(5);
        t_comentario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_comentarioKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(t_comentario);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        p_foto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        p_foto.setMinimumSize(new java.awt.Dimension(145, 136));
        p_foto.setPreferredSize(new java.awt.Dimension(145, 136));
        p_foto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_fotoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p_fotoLayout = new javax.swing.GroupLayout(p_foto);
        p_foto.setLayout(p_fotoLayout);
        p_fotoLayout.setHorizontalGroup(
            p_fotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 143, Short.MAX_VALUE)
        );
        p_fotoLayout.setVerticalGroup(
            p_fotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        medida.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PZAS", "GAL", "LTS", "MTS", "CMS", "MMS", "GRS", "MLS", "KGS", "HRS", "MIN", "KIT", "FT", "LB", "JGO", "NA" }));
        medida.setEnabled(false);
        medida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medidaActionPerformed(evt);
            }
        });

        l_tipo1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        l_tipo1.setText("Unidad:");

        l_modelo1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        l_modelo1.setForeground(new java.awt.Color(51, 51, 255));
        l_modelo1.setText("Precio:");

        t_precio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        t_precio.setEnabled(false);
        t_precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_precioActionPerformed(evt);
            }
        });

        l_minimo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        l_minimo.setForeground(new java.awt.Color(51, 51, 255));
        l_minimo.setText("Min:");

        l_maximo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        l_maximo.setForeground(new java.awt.Color(51, 51, 255));
        l_maximo.setText("Max:");

        t_minimo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        t_minimo.setEnabled(false);
        t_minimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_minimoActionPerformed(evt);
            }
        });

        t_maximo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        t_maximo.setEnabled(false);
        t_maximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_maximoActionPerformed(evt);
            }
        });

        cb_moneda.setText("Dolares");
        cb_moneda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_monedaActionPerformed(evt);
            }
        });

        l_ubicacion.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        l_ubicacion.setText("Ubicación:");

        t_ubicacion.setEnabled(false);
        t_ubicacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_ubicacionKeyTyped(evt);
            }
        });

        t_id_catalogo.setEnabled(false);
        t_id_catalogo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_id_catalogoKeyTyped(evt);
            }
        });

        l_ubicacion1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        l_ubicacion1.setText("Tipo:");

        c_tipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "REFACCION", "CONSUMIBLE" }));
        c_tipo.setEnabled(false);

        b_buscar_catalogo.setBackground(new java.awt.Color(2, 135, 242));
        b_buscar_catalogo.setIcon(new ImageIcon("imagenes/buscar.png"));
        b_buscar_catalogo.setToolTipText("Consultar aseguradoras");
        b_buscar_catalogo.setMaximumSize(new java.awt.Dimension(32, 8));
        b_buscar_catalogo.setMinimumSize(new java.awt.Dimension(32, 8));
        b_buscar_catalogo.setPreferredSize(new java.awt.Dimension(32, 8));
        b_buscar_catalogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_buscar_catalogoActionPerformed(evt);
            }
        });

        l_minimo1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        l_minimo1.setText("Ext:");

        t_existencia.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        t_existencia.setEnabled(false);
        t_existencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_existenciaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(p_foto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(l_tipo1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(medida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(l_modelo1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t_precio, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_moneda))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(l_ubicacion)
                        .addGap(18, 18, 18)
                        .addComponent(t_ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(l_ubicacion1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l_catalogo)
                            .addComponent(l_tipo)
                            .addComponent(l_marca)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(t_numero)
                            .addComponent(c_marca, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(c_grupo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(t_id_catalogo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_catalogo, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(b_buscar_catalogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(l_maximo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(t_maximo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_minimo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_minimo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_minimo1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_existencia, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_numero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_marca, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c_marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c_grupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(l_catalogo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(t_catalogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(t_id_catalogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(b_buscar_catalogo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_ubicacion1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(p_foto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(l_modelo1)
                        .addComponent(t_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cb_moneda))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(l_tipo1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(medida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(l_maximo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(t_maximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(l_minimo1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(t_existencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(l_minimo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(t_minimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        int opt=JOptionPane.showConfirmDialog(this, "¡Los datos capturados se eliminarán!");
        if(opt==0)
        {
            borra_cajas();
            habilita_cajas(false);
        }
    }//GEN-LAST:event_b_cancelarActionPerformed

    private void b_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_guardarActionPerformed
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);
        if(t_comentario.getText().compareTo("")!=0)
        {
            if(t_numero.getText().compareTo("")!=0)
            {
                try
                {
                    session = HibernateUtil.getSessionFactory().openSession();
                    session.beginTransaction();
                    actor = (Ejemplar)session.createCriteria(Ejemplar.class).add(Restrictions.eq("idParte", this.t_numero.getText())).add(Restrictions.ne("idParte", NS)).setMaxResults(1).uniqueResult();
                    if(actor==null)
                    {
                        System.out.println("update Ejemplar obj set obj.idParte='"+t_numero.getText().trim()+"' where obj.idParte='"+NS+"'");
                        Query q = session.createQuery("update Ejemplar obj set obj.idParte='"+t_numero.getText().trim()+"' where obj.idParte='"+NS+"'");
                        q.executeUpdate();                                    
                        actor=(Ejemplar)session.get(Ejemplar.class, t_numero.getText());
                        if(c_marca.getSelectedIndex()>0)
                        {
                            marca = (Marca)session.get(Marca.class, this.marc[c_marca.getSelectedIndex()]);//Articulo
                            actor.setMarca(marca);
                        }
                        else
                            actor.setMarca(null);
                        
                        if(c_grupo.getSelectedIndex()>0)
                        {
                            grupo = (Grupo)session.get(Grupo.class, Integer.parseInt(this.grup[c_grupo.getSelectedIndex()]));//Articulo
                            actor.setGrupo(grupo);
                        }
                        else
                            actor.setGrupo(null);
                        
                        if(c_tipo.getSelectedIndex()==0)
                            actor.setTipoEjemplar("R");
                        else
                            actor.setTipoEjemplar("C");
                            
                        
                        actor.setMedida(medida.getSelectedItem().toString());
                        if(t_id_catalogo.getText().compareTo("")!=0)
                        {
                            Catalogo cat_actual=(Catalogo)session.get(Catalogo.class, Integer.parseInt(t_id_catalogo.getText()));
                            actor.setCatalogo(cat_actual);
                        }
                        actor.setComentario(t_comentario.getText());
                        actor.setPrecio(Double.parseDouble(t_precio.getValue().toString()));
                        
                        if(inventario==1)
                        {
                            actor.setMaximo(Double.parseDouble(t_maximo.getValue().toString()));
                            actor.setMinimo(Double.parseDouble(t_minimo.getValue().toString()));
                            actor.setMoneda(cb_moneda.isSelected());
                            actor.setUbicacion(t_ubicacion.getText());
                        }
                        else
                        {
                            actor.setMoneda(cb_moneda.isSelected());
                        }
                        
                        if(entro_foto==1)
                        {
                            if(nombreFoto.compareTo("")==0)
                            {
                                Random rng=new Random();
                                long  dig8 = rng.nextInt(90000000)+10000000;
                                nombreFoto=""+dig8+".jpg";
                            }
                            guardaFoto(nombreFoto);
                            actor.setImagen(nombreFoto);
                        }
                        session.update(actor);
                        session.getTransaction().commit();
                        borra_cajas();
                        cargaMarca();
                        cargaGrupo();
                        buscaDato();
                        habilita_cajas(false);
                        JOptionPane.showMessageDialog(null, "Registro Actualizado");
                    }
                    else
                    {
                        session.getTransaction().rollback();
                        session.close();
                        JOptionPane.showMessageDialog(null, "Ya existe un ejemplar con el mismo numero de parte");
                    }
                }
                catch (HibernateException he)
                {
                    he.printStackTrace();
                    session.getTransaction().rollback();
                    session.close();
                    JOptionPane.showMessageDialog(null, "Error al guardar");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "¡El número de parte no puede ir vacio!");
                t_numero.requestFocus();
            }
        }
        else
            JOptionPane.showMessageDialog(null, "¡Debe introducir la descripcion!");
    }//GEN-LAST:event_b_guardarActionPerformed

    private void Selecciona2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Selecciona2ActionPerformed
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);     
        Container parent = this; // this is a JPanel
        do {
            parent = parent.getParent();
        } while (!(parent instanceof Window) && parent != null);
        altaEjemplar obj = new altaEjemplar((Frame)parent, true, usr, sessionPrograma, inventario);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        obj.setLocation((d.width/2)-(obj.getWidth()/2), (d.height/2)-(obj.getHeight()/2));
        obj.setVisible(true);
        obj.getReturnStatus();
        this.borra_cajas();
        habilita_cajas(false);
        buscaDato();
    }//GEN-LAST:event_Selecciona2ActionPerformed

    private void Eliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Eliminar1ActionPerformed
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);
       if(t_datos.getSelectedRow()>=0)
        {
            DefaultTableModel model = (DefaultTableModel) t_datos.getModel();
            int a = t_datos.getSelectedRow();
            int opt=JOptionPane.showConfirmDialog(this, "¡Los datos capturados se eliminarán!");
            if (JOptionPane.YES_OPTION == opt)
            {
                boolean respuesta=eliminar(t_datos.getValueAt(t_datos.getSelectedRow(), 0).toString());
                if(respuesta==true)
                { 
                    JOptionPane.showMessageDialog(null, "El Ejemplar ha sido eliminado");
                    borra_cajas();
                    habilita_cajas(false);
                    buscaDato();
                }
            }
        }
       else
       {
           JOptionPane.showMessageDialog(null, "Selecciona el ejemplar que desees eliminar");
           t_numero.requestFocus();
       }
       habilita_cajas(false);
    }//GEN-LAST:event_Eliminar1ActionPerformed

    private void Selecciona1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Selecciona1ActionPerformed
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);
        if(t_datos.getSelectedRow()>=0)
        {
            borra_cajas();
            cargaMarca();
            cargaGrupo();
            File archivo=null;
            entro_foto=0;
            NS=t_datos.getValueAt(t_datos.getSelectedRow(), 0).toString();
            t_numero.setText(t_datos.getValueAt(t_datos.getSelectedRow(), 0).toString());
            
            if(t_datos.getValueAt(t_datos.getSelectedRow(), 1)!=null)
                c_marca.setSelectedItem(t_datos.getValueAt(t_datos.getSelectedRow(), 1).toString());
            else
                c_marca.setSelectedItem("NA");
            if(t_datos.getValueAt(t_datos.getSelectedRow(), 2)!=null)
                c_grupo.setSelectedItem(t_datos.getValueAt(t_datos.getSelectedRow(), 2).toString());
            else
                c_grupo.setSelectedItem("NA");
            ArrayList vector=(ArrayList)lista_id.get(t_datos.getSelectedRow());
            t_id_catalogo.setText(vector.get(0).toString());
            t_catalogo.setText(t_datos.getValueAt(t_datos.getSelectedRow(), 3).toString());
            t_comentario.setText(t_datos.getValueAt(t_datos.getSelectedRow(), 4).toString());
            try
            {
                p_foto.removeAll();
                Imagen op;
                nombreFoto=vector.get(1).toString();
                op=new Imagen("ejemplar/miniatura/"+nombreFoto, 144, 135, 1, 1, 144, 135);
                p_foto.add(op);
                p_foto.repaint();
            }catch(Exception e){
                p_foto.removeAll();
                p_foto.repaint();
            }
            if(t_datos.getValueAt(t_datos.getSelectedRow(), 5)!=null)
                medida.setSelectedItem(t_datos.getValueAt(t_datos.getSelectedRow(), 5).toString());
            else
                medida.setSelectedItem("NA");
            
            if(inventario==1)
            {
                t_precio.setValue(t_datos.getValueAt(t_datos.getSelectedRow(), 6));
                cb_moneda.setSelected((boolean)t_datos.getValueAt(t_datos.getSelectedRow(), 7));
                t_maximo.setValue(t_datos.getValueAt(t_datos.getSelectedRow(), 8));
                t_minimo.setValue(t_datos.getValueAt(t_datos.getSelectedRow(), 9));
                t_existencia.setValue(t_datos.getValueAt(t_datos.getSelectedRow(), 10));
                if(t_datos.getValueAt(t_datos.getSelectedRow(), 11)!=null)
                    t_ubicacion.setText(t_datos.getValueAt(t_datos.getSelectedRow(), 11).toString());
                else
                    t_ubicacion.setText("");
            }
            else
            {
                cb_moneda.setSelected((boolean)t_datos.getValueAt(t_datos.getSelectedRow(), 7));
            }
            
            if(vector.get(2).toString().compareTo("R")==0)
                c_tipo.setSelectedItem("REFACCION");
            else
                c_tipo.setSelectedItem("CONSUMIBLE");
                
            habilita_cajas(true);
        }
        else
        JOptionPane.showMessageDialog(null, "¡No hay un ejemplar seleccionado!");
    }//GEN-LAST:event_Selecciona1ActionPerformed

    private void bt_actualiza1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_actualiza1ActionPerformed
        this.borra_cajas();
        habilita_cajas(false);
        buscaDato();
    }//GEN-LAST:event_bt_actualiza1ActionPerformed

    private void t_comentarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_comentarioKeyTyped
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_comentario.getText().length()>=100)
            evt.consume();
    }//GEN-LAST:event_t_comentarioKeyTyped

    private void t_numeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_numeroKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_numero.getText().length()>=35)
            evt.consume();
    }//GEN-LAST:event_t_numeroKeyTyped

    private void t_catalogoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_catalogoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_t_catalogoKeyTyped

    private void t_buscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_buscaActionPerformed
        // TODO add your handling code here:
        if(this.t_busca.getText().compareToIgnoreCase("")!=0)
        {
            //buscaCuentas();
            if(x>=t_datos.getRowCount())
            {
                x=0;
                java.awt.Rectangle r = t_datos.getCellRect( x, 1, true);
                t_datos.scrollRectToVisible(r);
            }
            for(; x<t_datos.getRowCount(); x++)
            {
                if(cb_busca.getSelectedItem().toString().compareToIgnoreCase("CLAVE")==0)
                {
                    if(t_datos.getValueAt(x, 0).toString().indexOf(t_busca.getText().toUpperCase()) != -1)
                    {
                        t_datos.setRowSelectionInterval(x, x);
                        t_datos.setColumnSelectionInterval(1, 1);
                        java.awt.Rectangle r = t_datos.getCellRect( x, 1, true);
                        t_datos.scrollRectToVisible(r);
                        break;
                    }
                }
                else
                {
                    if(t_datos.getValueAt(x, 4).toString().indexOf(t_busca.getText().toUpperCase()) != -1)
                    {
                        t_datos.setRowSelectionInterval(x, x);
                        t_datos.setColumnSelectionInterval(1, 1);
                        java.awt.Rectangle r = t_datos.getCellRect( x, 1, true);
                        t_datos.scrollRectToVisible(r);
                        break;
                    }
                }
            }
            x++;
        }
    }//GEN-LAST:event_t_buscaActionPerformed

    private void b_buscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_buscaActionPerformed
        // TODO add your handling code here:
        if(this.t_busca.getText().compareToIgnoreCase("")!=0)
        {
            //buscaCuentas();
            if(x>=t_datos.getRowCount())
            {
                x=0;
                java.awt.Rectangle r = t_datos.getCellRect( x, 1, true);
                t_datos.scrollRectToVisible(r);
            }
            for(; x<t_datos.getRowCount(); x++)
            {
                if(cb_busca.getSelectedItem().toString().compareToIgnoreCase("CLAVE")==0)
                {
                    if(t_datos.getValueAt(x, 0).toString().indexOf(t_busca.getText().toUpperCase()) != -1)
                    {
                        t_datos.setRowSelectionInterval(x, x);
                        t_datos.setColumnSelectionInterval(1, 1);
                        java.awt.Rectangle r = t_datos.getCellRect( x, 1, true);
                        t_datos.scrollRectToVisible(r);
                        break;
                    }
                }
                else
                {
                    if(t_datos.getValueAt(x, 4).toString().indexOf(t_busca.getText().toUpperCase()) != -1)
                    {
                        t_datos.setRowSelectionInterval(x, x);
                        t_datos.setColumnSelectionInterval(1, 1);
                        java.awt.Rectangle r = t_datos.getCellRect( x, 1, true);
                        t_datos.scrollRectToVisible(r);
                        break;
                    }
                }
            }
            x++;
        }
    }//GEN-LAST:event_b_buscaActionPerformed

    private void bt_actualiza2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_actualiza2ActionPerformed
        // TODO add your handling code here:
        javax.swing.JFileChooser jF1= new javax.swing.JFileChooser(); 
        jF1.setFileFilter(new ExtensionFileFilter("Excel document (*.xls)", new String[] { "xls" }));
        String ruta = null; 
        if(jF1.showSaveDialog(null)==jF1.APPROVE_OPTION)
        { 
            ruta = jF1.getSelectedFile().getAbsolutePath(); 
            if(ruta!=null)
            {
                File archivoXLS = new File(ruta+".xls");
                try
                {
                    if(archivoXLS.exists()) 
                        archivoXLS.delete();
                    archivoXLS.createNewFile();
                    Workbook libro = new HSSFWorkbook();
                    FileOutputStream archivo = new FileOutputStream(archivoXLS);
                    Sheet hoja = libro.createSheet("Clientes");
                    for(int ren=0;ren<(t_datos.getRowCount()+1);ren++)
                    {
                        Row fila = hoja.createRow(ren);
                        for(int col=0; col<t_datos.getColumnCount(); col++)
                        {
                            Cell celda = fila.createCell(col);
                            if(ren==0)
                            {
                                celda.setCellValue(columnas[col]);
                            }
                            else
                            {
                                try
                                {
                                    celda.setCellValue(t_datos.getValueAt(ren-1, col).toString());
                                }catch(Exception e)
                                {
                                    celda.setCellValue("");
                                }
                            }
                        }
                    }
                    libro.write(archivo);
                    archivo.close();
                    Desktop.getDesktop().open(archivoXLS);
                }catch(Exception e)
                {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "No se pudo realizar el reporte");
                }
            }
        } 
    }//GEN-LAST:event_bt_actualiza2ActionPerformed

    private void p_fotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_fotoMouseClicked
        // TODO add your handling code here:
        if(t_numero.isEnabled()==true)
        {
            JFileChooser selector=new JFileChooser();
            selector.setFileFilter(new ExtensionFileFilter("JPG and JPEG", new String[] { "JPG", "JPEG" }));
            int estado=1;
            estado=selector.showOpenDialog(null);
            if(estado==0)
            {
                archivo=selector.getSelectedFile();
                try
                {
                    if(archivo.exists())
                    {
                        String ruta=archivo.getPath();
                        p_foto.removeAll();
                        p_foto.add(new Imagen(ruta, 144, 135, 1, 1, 144, 135));
                        p_foto.repaint();
                        entro_foto=1;
                    }
                    else
                        javax.swing.JOptionPane.showMessageDialog(null, "No se pudo cargar la imagen");
                }catch(Exception e){}
            }
        }
    }//GEN-LAST:event_p_fotoMouseClicked

    private void t_precioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_precioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_precioActionPerformed

    private void t_minimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_minimoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_minimoActionPerformed

    private void t_maximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_maximoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_maximoActionPerformed

    private void medidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_medidaActionPerformed

    private void cb_monedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_monedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_monedaActionPerformed

    private void t_datosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_datosMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            if(t_datos.getSelectedRow()>-1)
            {
                MovEjemplar ej=new MovEjemplar(new Frame(), true, t_datos.getValueAt(t_datos.getSelectedRow(), 0).toString(), configuracion);
                Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
                ej.setLocation((d.width/2)-(ej.getWidth()/2), (d.height/2)-(ej.getHeight()/2));
                ej.setVisible(true);
            }
        }
    }//GEN-LAST:event_t_datosMouseClicked

    private void t_ubicacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_ubicacionKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_t_ubicacionKeyTyped

    private void t_id_catalogoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_id_catalogoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_t_id_catalogoKeyTyped

    private void b_buscar_catalogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_buscar_catalogoActionPerformed
        // TODO add your handling code here:
        h.menu=0;
        h.session(sessionPrograma);
        Session session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            session.beginTransaction().begin();
            
                buscaCatalogo obj = new buscaCatalogo(new javax.swing.JFrame(), true, sessionPrograma, usr);
                Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
                obj.setLocation((d.width/2)-(obj.getWidth()/2), (d.height/2)-(obj.getHeight()/2));
                obj.setVisible(true);
                Catalogo cat_act=obj.getReturnStatus();
                if (cat_act!=null)
                {
                    cat_act=(Catalogo)session.get(Catalogo.class, cat_act.getIdCatalogo());
                    t_id_catalogo.setText(""+cat_act.getIdCatalogo());
                    t_catalogo.setText(cat_act.getNombre());
                }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        if(session!=null)
            if(session.isOpen())
                session.close();
    }//GEN-LAST:event_b_buscar_catalogoActionPerformed

    private void t_existenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_existenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_existenciaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Eliminar1;
    private javax.swing.JButton Selecciona1;
    private javax.swing.JButton Selecciona2;
    private javax.swing.JButton b_busca;
    private javax.swing.JButton b_buscar_catalogo;
    private javax.swing.JButton b_cancelar;
    private javax.swing.JButton b_guardar;
    private javax.swing.JButton bt_actualiza1;
    private javax.swing.JButton bt_actualiza2;
    public javax.swing.JComboBox c_grupo;
    public javax.swing.JComboBox c_marca;
    private javax.swing.JComboBox c_tipo;
    private javax.swing.JComboBox cb_busca;
    public javax.swing.JCheckBox cb_moneda;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel l_catalogo;
    private javax.swing.JLabel l_marca;
    private javax.swing.JLabel l_maximo;
    private javax.swing.JLabel l_minimo;
    private javax.swing.JLabel l_minimo1;
    private javax.swing.JLabel l_modelo1;
    private javax.swing.JLabel l_tipo;
    private javax.swing.JLabel l_tipo1;
    private javax.swing.JLabel l_ubicacion;
    private javax.swing.JLabel l_ubicacion1;
    public javax.swing.JComboBox medida;
    private javax.swing.JPanel p_foto;
    private javax.swing.JTextField t_busca;
    public javax.swing.JTextField t_catalogo;
    public javax.swing.JTextArea t_comentario;
    private javax.swing.JTable t_datos;
    public javax.swing.JFormattedTextField t_existencia;
    public javax.swing.JTextField t_id_catalogo;
    public javax.swing.JFormattedTextField t_maximo;
    public javax.swing.JFormattedTextField t_minimo;
    public javax.swing.JTextField t_numero;
    public javax.swing.JFormattedTextField t_precio;
    public javax.swing.JTextField t_ubicacion;
    // End of variables declaration//GEN-END:variables

    public void cargaMarca()
    {
        List <Object[]> resultList=executeHQLQuery("from Marca where ejemplar in(1, 2)");
        if(resultList.size()>0)
        {
            c_marca.removeAllItems();
            marc= new String [resultList.size()+1];
            c_marca.addItem("NA");
            marc[0]="";
            int x=1;
            for (Object o : resultList)
            {
                marca = (Marca) o;
                c_marca.addItem(marca.getIdMarca());
                marc[x]=marca.getIdMarca();
                x++;
            }
        }
        if(session.isOpen())            
            session.close();
    }

    public void cargaGrupo()
    {
        List <Object[]> resultList=executeHQLQuery("from Grupo");
        if(resultList.size()>0)
        {
            c_grupo.removeAllItems();
            grup= new String [resultList.size()+1];
            c_grupo.addItem("NA");
            grup[0]="";
            int x=1;
            for (Object o : resultList)
            {
                grupo = (Grupo) o;
                c_grupo.addItem(grupo.getDescripcion());
                grup[x]=grupo.getIdGrupo().toString();
                x++;
            }
        }
        if(session.isOpen())            
            session.close();
    }

    public void borra_cajas()
    {
        t_numero.setText("");
        t_comentario.setText("");
        t_precio.setValue(0.00);
        t_maximo.setValue(0.00);
        t_minimo.setValue(0.00);
        t_existencia.setValue(0.00);
        t_catalogo.setText("");
        t_id_catalogo.setText("");
        t_ubicacion.setText("");
        p_foto.removeAll();
        archivo=null;
        nombreFoto="";
        entro_foto=0;
    }

    public void habilita_cajas(boolean edo)
    {
        t_numero.setEnabled(edo);
        c_marca.setEnabled(edo);
        c_grupo.setEnabled(edo);
        t_comentario.setEnabled(edo);
        b_buscar_catalogo.setEnabled(edo);
        t_precio.setEnabled(edo);
        t_ubicacion.setEditable(edo);
        b_cancelar.setEnabled(edo);
        b_guardar.setEnabled(edo);
        medida.setEnabled(edo);
        t_maximo.setEnabled(edo);
        t_minimo.setEnabled(edo);
        cb_moneda.setEnabled(edo);
        c_tipo.setEnabled(edo);
        t_ubicacion.setEnabled(edo);
    }
    
    private List<Object[]> executeHQLQuery(String hql) {
        session = HibernateUtil.getSessionFactory().openSession();
        try {
            session.beginTransaction();
            Query q = session.createQuery(hql);
            List resultList = q.list();
            session.getTransaction().commit();
            return resultList;
        } catch (HibernateException he) {
            he.printStackTrace();
            List lista= null;
            return lista;
        }
    }
    
    private boolean eliminar(String idEjemplar)
    {
        Session session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            session.beginTransaction();
            actor = (Ejemplar)session.get(Ejemplar.class, idEjemplar);
            
            if(actor.getPartidas().isEmpty()==false)
            {
                session.getTransaction().rollback();
                JOptionPane.showMessageDialog(null, "¡El ejemplar esta en uso, no se puede eliminar!");
                return false;
            }
            else
            {
                session.delete(actor);
                session.getTransaction().commit();
                return true;
            }
        }catch(Exception e)
        {
            e.printStackTrace();
            session.getTransaction().rollback();
            return false;
        }
        finally
        {
            if(session.isOpen())
                session.close();
        }
    }
    
    private void buscaDato()
    {
        try{
        lista_id=new ArrayList();
        String consulta="from Ejemplar obj where inventario="+inventario;
        List <Object[]> resultList=executeHQLQuery(consulta);
        if(resultList.size()>0)
        {
            if(inventario==0)
                t_datos.setModel(ModeloTablaReporte(resultList.size(), columnas0));
            else
                t_datos.setModel(ModeloTablaReporte(resultList.size(), columnas));
            int i=0;
            for (Object o : resultList)
            {
                ArrayList vector=new ArrayList();
                actor = (Ejemplar) o;
                model.setValueAt(actor.getIdParte(), i, 0);
                if(actor.getMarca()!=null)
                    model.setValueAt(actor.getMarca().getIdMarca(), i, 1);
                if(actor.getGrupo()!=null)
                    model.setValueAt(actor.getGrupo().getDescripcion(), i, 2);
                if(actor.getCatalogo()!=null)
                {
                    vector.add(actor.getCatalogo().getIdCatalogo());
                    model.setValueAt(actor.getCatalogo().getNombre(), i, 3);
                }
                else
                {
                    vector.add("");
                    model.setValueAt("", i, 3);
                }
                if(actor.getComentario()!=null)
                    model.setValueAt(actor.getComentario(), i, 4);
                else
                    model.setValueAt("", i, 4);
                
                if(actor.getImagen()!=null)
                    vector.add(actor.getImagen());
                else
                    vector.add("");
                model.setValueAt(actor.getMedida(), i, 5);
                model.setValueAt(actor.getPrecio(), i, 6);
                if(inventario==1)
                {
                    model.setValueAt(actor.getMoneda(), i, 7);
                    model.setValueAt(actor.getMaximo(), i, 8);
                    model.setValueAt(actor.getMinimo(), i, 9);
                    model.setValueAt(actor.getExistencias(), i, 10);
                    model.setValueAt(actor.getUbicacion(), i, 11);
                }
                else
                {
                    model.setValueAt(actor.getMoneda(), i, 7);
                }
                vector.add(actor.getTipoEjemplar());
                if(actor.getInventario()!=null)
                    vector.add(actor.getInventario());
                else
                    vector.add("");
                lista_id.add(vector);
                i++;
            }
        }
        else
            t_datos.setModel(ModeloTablaReporte(0, columnas));
        formatoTabla();
        session.close();
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    public void formatoTabla()
    {
        Color c1 = new java.awt.Color(2, 135, 242);
        for(int x=0; x<t_datos.getColumnModel().getColumnCount(); x++)
            t_datos.getColumnModel().getColumn(x).setHeaderRenderer(new Render1(c1));
        tabla_tamaños();
        t_datos.setShowVerticalLines(true);
        t_datos.setShowHorizontalLines(true);
    }
    
    public void tabla_tamaños()
    {
        TableColumnModel col_model = t_datos.getColumnModel();

        for (int i=0; i<t_datos.getColumnCount(); i++)
        {
  	      TableColumn column = col_model.getColumn(i);
              switch(i)
              {
                  case 0:
                      column.setPreferredWidth(100);
                      break;
                  case 3:
                      column.setPreferredWidth(20);
                      break;
                  case 4:
                      column.setPreferredWidth(200);
                      break;
                  case 6:
                      column.setPreferredWidth(50);
                      break;
                  case 7:
                      column.setPreferredWidth(80);
                      break;
                  case 8:
                      column.setPreferredWidth(80);
                      break;
                  case 9:
                      column.setPreferredWidth(80);
                      break;
                  default:
                      column.setPreferredWidth(80);
                      break; 
              }
        }
        JTableHeader header = t_datos.getTableHeader();
        header.setForeground(Color.white);
    }
    
    
    private boolean guardaFoto(String no)
{
    try {        
        if(archivo.exists()==true)
        {
            File folder = new File("ejemplar");
            folder.mkdirs();
            folder = new File("ejemplar/miniatura");
            folder.mkdirs();
            Random rng=new Random();
            long  dig8 = rng.nextInt(90000000)+10000000;
            File destino = new File("ejemplar/"+no);
            File miniatura = new File("ejemplar/miniatura/"+no);
            String ruta=archivo.getPath();
            javax.swing.JPanel p=new Imagen(ruta, 385, 250, 0, 0, 385, 250);
            BufferedImage dibujo =new BufferedImage(385, 250, BufferedImage.TYPE_INT_RGB);
            Graphics g = dibujo.getGraphics();
            p.paint(g);
            ImageIO.write((RenderedImage)dibujo, "jpg", miniatura); // Salvar la imagen en el fichero
            BufferedImage dibujoGrande =ImageIO.read(archivo);
            ImageIO.write((RenderedImage)dibujoGrande, "jpg", destino); // Salvar la imagen en el fichero*/
            return true;
        }
        return false;
    } 
    catch (Exception ioe)
    {
        ioe.printStackTrace();
        System.out.println("Error al guardar archivo.");
        return false;
    }
}
}
