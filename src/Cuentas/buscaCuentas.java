/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cuentas;

import Integral.Herramientas;
import Integral.Render1;
import Hibernate.Util.HibernateUtil;
import java.util.List;
import javax.swing.InputMap;
import javax.swing.JOptionPane;
import Hibernate.entidades.Usuario;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import org.hibernate.Criteria;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
/**
 *
 * @author ESPECIALIZADO TOLUCA
 */
public class buscaCuentas extends javax.swing.JDialog {

    public static final ArrayList RET_CANCEL =null;
    //private Session session;
    InputMap map = new InputMap();
    DefaultTableModel model;
    String[] columnas = new String [] {"N° Cuenta","Saldo", "Nombre"};
    String sessionPrograma="";
    Herramientas h;
    Usuario usr;  
    String consulta="";
    /** Creates new form acceso */
    public buscaCuentas(javax.swing.JFrame parent, boolean modal, String ses, Usuario usuario, String consul) {
        super(parent, modal);
        consulta=consul;
        sessionPrograma=ses;
        usr=usuario;
        initComponents();
        //getRootPane().setDefaultButton(jButton1);
        tabla_cuentas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        muestradatos();
        tabla_tamaños();
    }
    
    DefaultTableModel ModeloTablaReporte(int renglones, String columnas[])
    {
            model = new DefaultTableModel(new Object [renglones][0], columnas)
            {
                Class[] types = new Class [] {
                    java.lang.String.class, 
                    java.lang.String.class,
                    java.lang.String.class
                };
                boolean[] canEdit = new boolean [] {
                    false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            };
            return model;
        }

    
    private void doClose(ArrayList o) {
        returnStatus = o;
        setVisible(false);
        dispose();
    }
    
    public ArrayList getReturnStatus() {
        return returnStatus;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla_cuentas = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        jButton5 = new javax.swing.JButton();
        texto_cuenta = new javax.swing.JTextField();
        tipo_cuenta = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buaqueda de Cuentas");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton6.setBackground(new java.awt.Color(2, 135, 242));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Seleccionar");
        jButton6.setMaximumSize(new java.awt.Dimension(101, 28));
        jButton6.setMinimumSize(new java.awt.Dimension(101, 28));
        jButton6.setPreferredSize(new java.awt.Dimension(101, 28));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        tabla_cuentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "N° de Cuenta", "Saldo", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_cuentas.setFillsViewportHeight(true);
        tabla_cuentas.getTableHeader().setResizingAllowed(false);
        tabla_cuentas.getTableHeader().setReorderingAllowed(false);
        tabla_cuentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_cuentasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabla_cuentas);

        jButton5.setBackground(new java.awt.Color(2, 135, 242));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Buscar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        texto_cuenta.setBackground(new java.awt.Color(204, 255, 255));
        texto_cuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                texto_cuentaActionPerformed(evt);
            }
        });
        texto_cuenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                texto_cuentaKeyTyped(evt);
            }
        });

        tipo_cuenta.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tipo_cuenta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "N° Cuenta", "Nombre" }));
        tipo_cuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipo_cuentaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Buscar por:");

        jButton1.setBackground(new java.awt.Color(2, 135, 242));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Nuevo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tipo_cuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(texto_cuenta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tipo_cuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(texto_cuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void muestradatos(){
        tabla_tamaños();
        Session session = HibernateUtil.getSessionFactory().openSession();
        try {
            String consulta1 = "select id_cuentas, saldo, nombre from cuentas where";
            if (tipo_cuenta.getSelectedItem().toString().compareTo("N° Cuenta") == 0) {
                consulta1 += " id_cuentas like '" + texto_cuenta.getText().toString() + "%' "+consulta;
            } else {
                consulta1 += " nombre like '%" + texto_cuenta.getText().toString() + "%' "+consulta;
            }
            
            Query query = session.createSQLQuery(consulta1);
            query.setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP);
            ArrayList datos = (ArrayList) query.list();
            model = new DefaultTableModel(null, columnas);
            tabla_cuentas.setModel(model);
            if (datos.size() > 0) {
                model.getDataVector().removeAllElements();
                Object[] objeto = new Object[3];

                for (int i = 0; i < datos.size(); i++) {
                    java.util.HashMap map = (java.util.HashMap) datos.get(i);
                    objeto[0] = map.get("id_cuentas");
                    objeto[1] = map.get("saldo");
                    objeto[2] = map.get("nombre");
                    model.addRow(objeto);
                }
            } else {
                model = new DefaultTableModel(null, columnas);
                tabla_cuentas.setModel(model);

            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (session.isOpen() == true) {
                session.close();
            }
        }
    }
     
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
            if(tabla_cuentas.getRowCount()>0)
            {
                if(tabla_cuentas.getSelectedRow()>=0)            
                {
                    ArrayList lista=new ArrayList();
                    lista.add(tabla_cuentas.getValueAt(tabla_cuentas.getSelectedRow(), 0).toString());
                    lista.add(tabla_cuentas.getValueAt(tabla_cuentas.getSelectedRow(), 2).toString());
                    lista.add(tabla_cuentas.getValueAt(tabla_cuentas.getSelectedRow(), 1).toString());
                    doClose(lista);
                }
                else
                    JOptionPane.showMessageDialog(null, "¡No hay una tipo seleccionado!");    
            }
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void tabla_cuentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_cuentasMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            this.jButton6ActionPerformed(null);
        }
    }//GEN-LAST:event_tabla_cuentasMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        muestradatos();
        tabla_tamaños();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void texto_cuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_texto_cuentaActionPerformed
        // TODO add your handling code here:
        this.jButton5ActionPerformed(null);
    }//GEN-LAST:event_texto_cuentaActionPerformed

    private void texto_cuentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_texto_cuentaKeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }//GEN-LAST:event_texto_cuentaKeyTyped

    private void tipo_cuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipo_cuentaActionPerformed
        // TODO add your handling code here:
        texto_cuenta.setText("");
        if (tipo_cuenta.getSelectedItem().equals("N° Cuenta")) {
            muestradatos();
            tabla_tamaños();
        } else {
            muestradatos();
            tabla_tamaños();
        }
    }//GEN-LAST:event_tipo_cuentaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //h=new Herramientas(usr, 0);
        //h.session(sessionPrograma);
        altaCuentas obj = new altaCuentas(new javax.swing.JFrame(), true, usr, sessionPrograma);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        obj.setLocation((d.width/2)-(obj.getWidth()/2), (d.height/2)-(obj.getHeight()/2));
        obj.setVisible(true);
        muestradatos();
        tabla_tamaños();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tabla_cuentas;
    private javax.swing.JTextField texto_cuenta;
    private javax.swing.JComboBox tipo_cuenta;
    // End of variables declaration//GEN-END:variables

    private List<Object[]> executeHQLQuery(String hql) {
        try 
        {
            Session session = HibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            Query q = session.createQuery(hql);
            List resultList = q.list();
            session.getTransaction().commit();
            session.disconnect();
            return resultList;
        } catch (HibernateException he) {
            he.printStackTrace();
            List lista= null;//new List(5);
            return lista;
        }
    }
    
private void buscaDato()
{
//    String consulta="from Tipo obj where obj.tipoNombre like '%" + t_busca.getText() +"%'";
//    List <Object[]> resultList=executeHQLQuery(consulta);
//    if(resultList.size()>0)
//    {
//        t_datos.setModel(ModeloTablaReporte(resultList.size(), columnas));
//        int i=0;
//        for (Object o : resultList) 
//        {
//            Tipo actor = (Tipo) o;
//            model.setValueAt(actor.getTipoNombre(), i, 0);
//            if(actor.getEPesado()==0)
//                model.setValueAt(false, i, 1);
//            else
//                model.setValueAt(true, i, 1);
//            i++;
//        }
//    }
//    else
//        t_datos.setModel(ModeloTablaReporte(0, columnas));
    formatoTabla();
}
    private ArrayList returnStatus = RET_CANCEL;
    
    public void tabla_tamaños()
    {
        TableColumnModel col_model = tabla_cuentas.getColumnModel();
        for (int i=0; i<tabla_cuentas.getColumnCount(); i++)
        {
  	      TableColumn column = col_model.getColumn(i);
              switch(i)
              {
                  case 0:
                      column.setPreferredWidth(70);
                      break;
                  case 1:
                      column.setPreferredWidth(10);
                      break;                 
                  default:
                      column.setPreferredWidth(250);
                      break;                     
              }
        }
        JTableHeader header = tabla_cuentas.getTableHeader();
        header.setForeground(Color.black);
    }

    public void formatoTabla()
    {
        Color c1 = new java.awt.Color(2, 135, 242);
        for(int x=0; x<tabla_cuentas.getColumnModel().getColumnCount(); x++)
            tabla_cuentas.getColumnModel().getColumn(x).setHeaderRenderer(new Render1(c1));
        tabla_tamaños();
        tabla_cuentas.setShowVerticalLines(true);
        tabla_cuentas.setShowHorizontalLines(true);
    }
}
