/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * acceso.java
 *
 * Created on 19/01/2012, 02:01:25 PM
 */
package Integral;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.InputMap;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import Hibernate.entidades.Usuario;
import Hibernate.entidades.Ciclo;
import Hibernate.Util.HibernateUtil;
import Hibernate.entidades.Configuracion;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.FileReader;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Formatter;
import org.hibernate.criterion.Order;

/**
 *
 * @author ISC_SALVADOR
 */
public class acceso extends javax.swing.JDialog {

    public static final List RET_CANCEL =null;
    Hilo miHilo;
    InputMap map = new InputMap();
    private List returnStatus = RET_CANCEL;
    public String ruta="", rutaFTP;
    int configuracion=2;
    
    /** Creates new form acceso */
    public acceso(java.awt.Frame parent, boolean modal, int configuracion) {
        super(parent, modal);
        map.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false), "pressed");
        map.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true), "released");   
        initComponents();
        this.configuracion=configuracion;
        this.t_usuario.setEnabled(false);
        this.t_clave.setEnabled(false);
        this.bentrar.setEnabled(false);
        b_conexion.setVisible(false);
        l_titulo.setText("INICIANDO SERVICIO");
        bentrar.setInputMap(0, map);
        t_usuario.requestFocus();
        miHilo=null;
        miHilo = new Hilo();
    }

    
    private void doClose(Usuario actor) {
        returnStatus=new ArrayList();
        returnStatus.add(actor);
        returnStatus.add(l_periodo.getText());
        miHilo=null;
        map = null;
        dispose();
    }
    
    public List getReturnStatus() {
        return returnStatus;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        l_periodo = new javax.swing.JLabel();
        p_general = new javax.swing.JPanel();
        l_icono = new javax.swing.JLabel();
        p_barra = new javax.swing.JPanel();
        l_x = new javax.swing.JLabel();
        l_titulo = new javax.swing.JLabel();
        l_usuario = new javax.swing.JLabel();
        t_usuario = new javax.swing.JTextField();
        l_clave = new javax.swing.JLabel();
        t_clave = new javax.swing.JPasswordField();
        bentrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        b_conexion = new javax.swing.JButton();

        l_periodo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        l_periodo.setForeground(new java.awt.Color(204, 204, 0));
        l_periodo.setText("-");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Acceso");
        setUndecorated(true);
        setResizable(false);

        p_general.setBackground(new java.awt.Color(255, 255, 255));
        p_general.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        l_icono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/gearsan.gif"))); // NOI18N

        p_barra.setBackground(new java.awt.Color(51, 51, 51));

        l_x.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        l_x.setForeground(new java.awt.Color(255, 255, 255));
        l_x.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_x.setText("x");
        l_x.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l_xMouseClicked(evt);
            }
        });

        l_titulo.setForeground(new java.awt.Color(255, 255, 255));
        l_titulo.setText("Integral");

        javax.swing.GroupLayout p_barraLayout = new javax.swing.GroupLayout(p_barra);
        p_barra.setLayout(p_barraLayout);
        p_barraLayout.setHorizontalGroup(
            p_barraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p_barraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(l_titulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(l_x, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        p_barraLayout.setVerticalGroup(
            p_barraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_barraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(p_barraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_x)
                    .addComponent(l_titulo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        l_usuario.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        l_usuario.setForeground(new java.awt.Color(204, 204, 255));
        l_usuario.setText("Ingresa tu Usuario");

        t_usuario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t_usuario.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 153, 153)));
        t_usuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_usuarioFocusGained(evt);
            }
        });
        t_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_usuarioActionPerformed(evt);
            }
        });
        t_usuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_usuarioKeyTyped(evt);
            }
        });

        l_clave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        l_clave.setForeground(new java.awt.Color(204, 204, 255));
        l_clave.setText("Ingresa tu password");

        t_clave.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t_clave.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 153, 153)));
        t_clave.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_claveFocusGained(evt);
            }
        });
        t_clave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_claveActionPerformed(evt);
            }
        });
        t_clave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_claveKeyTyped(evt);
            }
        });

        bentrar.setBackground(new java.awt.Color(0, 51, 204));
        bentrar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bentrar.setForeground(new java.awt.Color(255, 255, 255));
        bentrar.setText("Entrar");
        bentrar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bentrar.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        bentrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bentrarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel1.setText("Desarrollado por Truck Body Shop S.A de C.V ");

        b_conexion.setBackground(new java.awt.Color(0, 51, 204));
        b_conexion.setForeground(new java.awt.Color(255, 255, 255));
        b_conexion.setText("Reintentar");
        b_conexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_conexionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout p_generalLayout = new javax.swing.GroupLayout(p_general);
        p_general.setLayout(p_generalLayout);
        p_generalLayout.setHorizontalGroup(
            p_generalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(p_barra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(p_generalLayout.createSequentialGroup()
                .addGroup(p_generalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p_generalLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(bentrar))
                    .addGroup(p_generalLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel1)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p_generalLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(p_generalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p_generalLayout.createSequentialGroup()
                        .addGroup(p_generalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(t_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_usuario)
                            .addComponent(l_clave)
                            .addComponent(t_clave, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p_generalLayout.createSequentialGroup()
                        .addComponent(l_icono)
                        .addGap(97, 97, 97))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p_generalLayout.createSequentialGroup()
                        .addComponent(b_conexion)
                        .addGap(126, 126, 126))))
        );
        p_generalLayout.setVerticalGroup(
            p_generalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_generalLayout.createSequentialGroup()
                .addComponent(p_barra, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(l_icono)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_conexion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_usuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(l_clave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_clave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(bentrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(p_general, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(p_general, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_usuarioActionPerformed
        t_clave.requestFocus();
}//GEN-LAST:event_t_usuarioActionPerformed

    private void t_claveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_claveActionPerformed
        bentrar.requestFocus();
}//GEN-LAST:event_t_claveActionPerformed

    private void bentrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bentrarActionPerformed
        if(t_usuario.getText().compareTo("")!=0)
        {
            if(t_clave.getText().compareTo("")!=0)
            {
                Session session = HibernateUtil.getSessionFactory().openSession();
                try
                {
                    Query q = session.createQuery("from Usuario usr "+ "where usr.idUsuario='" + t_usuario.getText() + "' and usr.clave='" + t_clave.getText() + "'");
                    Usuario objeto = (Usuario)q.uniqueResult();
                    if(objeto!=null)
                    {
                        if(session.isOpen())
                            session.close();
                        doClose(objeto);
                    }
                    else
                    {
                        if(session.isOpen())
                            session.close();
                        JOptionPane.showMessageDialog(null, "Datos incorrectos");
                        t_usuario.requestFocus();
                    }
                }catch(Exception e)
                {
                    System.out.println(e);
                }
                finally
                {
                    if(session!=null)
                        if(session.isOpen())
                            session.close();
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Falta la clave");
                t_clave.requestFocus();
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Falta el usuario");
            t_usuario.requestFocus();
        }
    }//GEN-LAST:event_bentrarActionPerformed

    private void t_usuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_usuarioKeyTyped
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_usuario.getText().length()>=10)
            evt.consume();
    }//GEN-LAST:event_t_usuarioKeyTyped

    private void t_claveKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_claveKeyTyped
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_clave.getText().length()>=10)
            evt.consume();
    }//GEN-LAST:event_t_claveKeyTyped

    private void b_conexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_conexionActionPerformed
        this.t_usuario.setEnabled(false);
        this.t_clave.setEnabled(false);
        this.bentrar.setEnabled(false);
        b_conexion.setVisible(false);
        l_icono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/error.jpg")));
        l_icono.repaint();
        l_titulo.setText("INICIANDO SERVICIO");
        t_usuario.requestFocus();
        miHilo=null;
        miHilo = new Hilo();
    }//GEN-LAST:event_b_conexionActionPerformed

    private void t_usuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_usuarioFocusGained
        t_usuario.setSelectionStart(0); 
        t_usuario.setSelectionEnd(t_usuario.getText().length()); 
    }//GEN-LAST:event_t_usuarioFocusGained

    private void t_claveFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_claveFocusGained
        t_clave.setSelectionStart(0); 
        t_clave.setSelectionEnd(t_clave.getText().length()); 
    }//GEN-LAST:event_t_claveFocusGained

    private void l_xMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l_xMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_l_xMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_conexion;
    private javax.swing.JButton bentrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel l_clave;
    private javax.swing.JLabel l_icono;
    private javax.swing.JLabel l_periodo;
    private javax.swing.JLabel l_titulo;
    private javax.swing.JLabel l_usuario;
    private javax.swing.JLabel l_x;
    private javax.swing.JPanel p_barra;
    private javax.swing.JPanel p_general;
    private javax.swing.JPasswordField t_clave;
    private javax.swing.JTextField t_usuario;
    // End of variables declaration//GEN-END:variables

    public void cargaPeriodo()
    {
        try
        {
            l_titulo.setText("CARGANDO ARCHIVOS");
            FileReader fil = new FileReader("config.txt");
            BufferedReader b = new BufferedReader(fil);
            if((ruta = b.readLine())==null)
                ruta="";
            b.close();
            fil.close();
            
            fil = new FileReader("ftp.txt");
            b = new BufferedReader(fil);
            if((rutaFTP = b.readLine())==null)
                rutaFTP="";
            b.close();
            fil.close();
            fil=null;
            b=null;
            
            l_titulo.setText("CONECTANDO");
            Session session = HibernateUtil.getSessionFactory().openSession();
            try
            {
                l_titulo.setText("INICIANDO SERVICIOS");
                session.beginTransaction().begin();
                Ciclo ciclo = (Ciclo)session.createCriteria(Ciclo.class).addOrder(Order.desc("idCiclo")).setMaxResults(1).uniqueResult();
                if(ciclo!=null)
                {
                    Configuracion config=(Configuracion)session.get(Configuracion.class, configuracion);
                    Date fecha_hoy = new Date();
                    DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                    String fecha = dateFormat.format(fecha_hoy);
                    if((config.getFechaCambio()==null || fecha.compareTo(config.getFechaCambio().toString())!=0)){
                        ObtenTipoCambio tipoCambio = new ObtenTipoCambio();
                        double valor = tipoCambio.obtentipo();
                        if(valor>0){
                            config.setTipoCambio(valor);
                            config.setFechaCambio(fecha_hoy);
                            session.update(config);
                            session.beginTransaction().commit();
                        }
                    }
                    l_periodo.setText("s");                    
                        l_periodo.setText(""+ciclo.getIdCiclo());
                    ciclo=null;
                    if(session.isOpen())
                        session.close();
                    session=null;
                    this.t_usuario.setEnabled(true);
                    this.t_clave.setEnabled(true);
                    this.bentrar.setEnabled(true);
                    b_conexion.setVisible(false);
                    l_icono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/login.jpg")));
                    l_icono.repaint();
                    l_titulo.setText("LISTO");
                    this.t_usuario.requestFocus();
                }
                else
                {
                    Formatter fmt = new Formatter();
                    Calendar cal = Calendar.getInstance();
                    fmt = new Formatter();
                    fmt.format("%ty", cal);
                    int f= Integer.parseInt(fmt.toString());
                    Ciclo nuevo= new Ciclo(f);
                    session.save(nuevo);
                    session.beginTransaction().commit();
                    if(session.isOpen())
                        session.close();
                    session=null;
                    cargaPeriodo();
                    this.t_usuario.requestFocus();
                }
                this.setVisible(true);
            }catch(HibernateException | HeadlessException | NumberFormatException e)
            {
                e.printStackTrace();
                session.beginTransaction().commit();
                if(session.isOpen())
                    session.close();
                session=null;
            }
        }catch(Exception e)
        {
            e.printStackTrace();
            this.t_usuario.setEnabled(false);
            this.t_clave.setEnabled(false);
            this.bentrar.setEnabled(false);
            b_conexion.setVisible(true);
            l_icono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/error.jpg")));
            l_icono.repaint();
            l_titulo.setText("ERROR DE CONEXION");
        }
    }
    
    public class Hilo implements Runnable
    {
        Thread t;
        public Hilo() 
        {
            t=new Thread(this,"Conexion");
            t.start();
        }
        @Override
        public void run() {
            cargaPeriodo();
            t.interrupt();
        }
    }
}
