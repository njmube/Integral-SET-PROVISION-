/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Servicios;

import Hibernate.Util.HibernateUtil;
import Hibernate.entidades.Acceso;
import Hibernate.entidades.Configuracion;
import Hibernate.entidades.Cuenta;
import Hibernate.entidades.Foto;
import Hibernate.entidades.Notificacion;
import Hibernate.entidades.Orden;
import Hibernate.entidades.Usuario;
import Integral.ExtensionFileFilter;
import Integral.Ftp;
import Integral.Herramientas;
import Integral.PDF;
import Integral.PeticionPost;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.AcroFields;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.GrayColor;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfStamper;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.nio.file.Files;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author Sistemas
 */
public class SosColision extends javax.swing.JPanel {

    String estado="";
    String sessionPrograma="";
    Usuario usr;
    String ord="";
    Herramientas h;
    Orden orden_act;
    JFileChooser selector;
    String ruta;
    /**
     * Creates new form SmLogistics
     */
    public SosColision(String ord, Usuario usr, String estado, String sessionPrograma, String carpeta) {
        initComponents();
        this.ord=ord;
        this.usr=usr;
        this.estado=estado;
        this.sessionPrograma=sessionPrograma;
        ruta=carpeta;
        buscaDatos();
        selector=new JFileChooser();
        selector.setFileFilter(new ExtensionFileFilter("Documentos(PDF y DOCX)", new String[] { "PDF", "DOCX" }));
        selector.setAcceptAllFileFilterUsed(false);
        selector.setMultiSelectionEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ListaSOS = new javax.swing.JDialog();
        jPanel7 = new javax.swing.JPanel();
        b_autorizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        c_estatus1 = new javax.swing.JComboBox();
        id_unidad = new javax.swing.JLabel();
        id_sucursal = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        t_ingreso = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        t_promesa = new javax.swing.JTextField();
        t_salida = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        c_estatus = new javax.swing.JComboBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        t_descripcion = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        t_economico = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        t_autorizo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        t_reporte = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        t_deducible = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        t_demerito = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        b_inventario_carga = new javax.swing.JButton();
        b_inventario = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        b_pago_carga = new javax.swing.JButton();
        b_pago = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        b_cotizacion_carga = new javax.swing.JButton();
        b_cotizacion = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        b_desgaste_carga = new javax.swing.JButton();
        b_desgaste = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        t_solicitud = new javax.swing.JTextField();

        ListaSOS.setModalExclusionType(null);
        ListaSOS.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Lista de Reparaciones Asignadas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        b_autorizar.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        b_autorizar.setText("Enlazar");
        b_autorizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_autorizarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Filtrar por Estatus:");

        c_estatus1.setBackground(new java.awt.Color(204, 255, 255));
        c_estatus1.setForeground(new java.awt.Color(51, 0, 255));
        c_estatus1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PROGRAMADA", "PROCESO", "VALUACION", "EN REPARACION", "TERMINADA", "ENTREGADA", "CANCELADA", "PERDIDA TOTAL" }));
        c_estatus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_estatus1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c_estatus1, 0, 181, Short.MAX_VALUE)
                        .addGap(260, 260, 260)
                        .addComponent(b_autorizar)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(c_estatus1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_autorizar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ListaSOSLayout = new javax.swing.GroupLayout(ListaSOS.getContentPane());
        ListaSOS.getContentPane().setLayout(ListaSOSLayout);
        ListaSOSLayout.setHorizontalGroup(
            ListaSOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ListaSOSLayout.setVerticalGroup(
            ListaSOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        id_unidad.setText("jLabel13");

        id_sucursal.setText("jLabel13");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "SOS Collision", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Servicios/icono.png"))); // NOI18N

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "GENERAL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 10))); // NOI18N
        jPanel16.setLayout(new java.awt.BorderLayout());

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Ingreso");

        t_ingreso.setEditable(false);
        t_ingreso.setBackground(new java.awt.Color(204, 255, 255));
        t_ingreso.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t_ingreso.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_ingreso.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Promesa");

        t_promesa.setEditable(false);
        t_promesa.setBackground(new java.awt.Color(204, 255, 255));
        t_promesa.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t_promesa.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_promesa.setEnabled(false);

        t_salida.setEditable(false);
        t_salida.setBackground(new java.awt.Color(204, 255, 255));
        t_salida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t_salida.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_salida.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Salida");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(t_ingreso, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_promesa, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(t_salida, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(t_ingreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(t_promesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(t_salida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel16.add(jPanel18, java.awt.BorderLayout.CENTER);

        c_estatus.setBackground(new java.awt.Color(204, 255, 255));
        c_estatus.setForeground(new java.awt.Color(51, 0, 255));
        c_estatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PROGRAMADA", "PROCESO", "VALUACION", "EN REPARACION", "TERMINADA", "ENTREGADA", "CANCELADA", "PERDIDA TOTAL" }));
        c_estatus.setEnabled(false);
        c_estatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_estatusActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        t_descripcion.setEditable(false);
        t_descripcion.setColumns(20);
        t_descripcion.setRows(5);
        jScrollPane2.setViewportView(t_descripcion);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Descripción:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Economico:");

        t_economico.setEditable(false);
        t_economico.setBackground(new java.awt.Color(204, 255, 255));
        t_economico.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t_economico.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_economico.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Autorizo:");

        t_autorizo.setEditable(false);
        t_autorizo.setBackground(new java.awt.Color(204, 255, 255));
        t_autorizo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t_autorizo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_autorizo.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("N° Reporte:");

        t_reporte.setEditable(false);
        t_reporte.setBackground(new java.awt.Color(204, 255, 255));
        t_reporte.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t_reporte.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_reporte.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Deducible:");

        t_deducible.setEditable(false);
        t_deducible.setBackground(new java.awt.Color(204, 255, 255));
        t_deducible.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t_deducible.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_deducible.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Demerito:");

        t_demerito.setEditable(false);
        t_demerito.setBackground(new java.awt.Color(204, 255, 255));
        t_demerito.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t_demerito.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_demerito.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(t_autorizo))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(t_reporte)
                    .addComponent(t_economico, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel10))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(t_deducible, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_demerito, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t_economico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_deducible, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t_reporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_demerito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(t_autorizo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Reporte", jPanel3);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "INVENTARIO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 10))); // NOI18N

        b_inventario_carga.setBackground(new java.awt.Color(2, 135, 242));
        b_inventario_carga.setForeground(new java.awt.Color(255, 255, 255));
        b_inventario_carga.setIcon(new ImageIcon("imagenes/subir.png"));
        b_inventario_carga.setToolTipText("Calendario");
        b_inventario_carga.setEnabled(false);
        b_inventario_carga.setMaximumSize(new java.awt.Dimension(32, 8));
        b_inventario_carga.setMinimumSize(new java.awt.Dimension(32, 8));
        b_inventario_carga.setPreferredSize(new java.awt.Dimension(28, 24));
        b_inventario_carga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_inventario_cargaActionPerformed(evt);
            }
        });

        b_inventario.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_inventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_inventarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(b_inventario, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_inventario_carga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(b_inventario, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(b_inventario_carga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "INFO. PAGO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 10))); // NOI18N

        b_pago_carga.setBackground(new java.awt.Color(2, 135, 242));
        b_pago_carga.setForeground(new java.awt.Color(255, 255, 255));
        b_pago_carga.setIcon(new ImageIcon("imagenes/subir.png"));
        b_pago_carga.setToolTipText("Calendario");
        b_pago_carga.setEnabled(false);
        b_pago_carga.setMaximumSize(new java.awt.Dimension(32, 8));
        b_pago_carga.setMinimumSize(new java.awt.Dimension(32, 8));
        b_pago_carga.setPreferredSize(new java.awt.Dimension(28, 24));
        b_pago_carga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_pago_cargaActionPerformed(evt);
            }
        });

        b_pago.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_pago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_pagoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(b_pago, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_pago_carga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(b_pago, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(b_pago_carga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "COTIZACIÓN", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 10))); // NOI18N

        b_cotizacion_carga.setBackground(new java.awt.Color(2, 135, 242));
        b_cotizacion_carga.setForeground(new java.awt.Color(255, 255, 255));
        b_cotizacion_carga.setIcon(new ImageIcon("imagenes/subir.png"));
        b_cotizacion_carga.setToolTipText("Calendario");
        b_cotizacion_carga.setEnabled(false);
        b_cotizacion_carga.setMaximumSize(new java.awt.Dimension(32, 8));
        b_cotizacion_carga.setMinimumSize(new java.awt.Dimension(32, 8));
        b_cotizacion_carga.setPreferredSize(new java.awt.Dimension(28, 24));
        b_cotizacion_carga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cotizacion_cargaActionPerformed(evt);
            }
        });

        b_cotizacion.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_cotizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cotizacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(b_cotizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_cotizacion_carga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(b_cotizacion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(b_cotizacion_carga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "DESGASTE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 10))); // NOI18N

        b_desgaste_carga.setBackground(new java.awt.Color(2, 135, 242));
        b_desgaste_carga.setForeground(new java.awt.Color(255, 255, 255));
        b_desgaste_carga.setIcon(new ImageIcon("imagenes/subir.png"));
        b_desgaste_carga.setToolTipText("Calendario");
        b_desgaste_carga.setEnabled(false);
        b_desgaste_carga.setMaximumSize(new java.awt.Dimension(32, 8));
        b_desgaste_carga.setMinimumSize(new java.awt.Dimension(32, 8));
        b_desgaste_carga.setPreferredSize(new java.awt.Dimension(28, 24));
        b_desgaste_carga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_desgaste_cargaActionPerformed(evt);
            }
        });

        b_desgaste.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_desgaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_desgasteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(b_desgaste, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_desgaste_carga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(b_desgaste, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(b_desgaste_carga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(178, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Informes", jPanel8);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 748, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 176, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Galeria", jPanel9);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Estatus:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("REPARACION:");

        t_solicitud.setBackground(new java.awt.Color(204, 255, 255));
        t_solicitud.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t_solicitud.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_solicitud.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_solicitud))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c_estatus, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(t_solicitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(c_estatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void b_inventario_cargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_inventario_cargaActionPerformed
        // TODO add your handling code here:
            Session session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            File destino=null;
            int estado=selector.showOpenDialog(null);
            File archivo = selector.getSelectedFile();
            if(estado==0)
            {
                if(archivo.exists())
                {
                    Herramientas h = new Herramientas(this.usr, 0);
                    String nombre=b_inventario.getText();
                    if(nombre.compareTo("pendiente")==0)
                        nombre=h.randomString(11)+".pdf";
                    System.out.println(nombre);
                    Ftp miFtp=new Ftp();
                    if(miFtp.conectar(ruta, "sm", "04650077", 3310))
                    {
                        if(miFtp.cambiarDirectorio("/recursos/reparacion/documentos/inventario/"))
                        {
                            if(miFtp.subirArchivo(archivo.getPath(), nombre))
                            {
                                session.beginTransaction().begin();
                                orden_act = (Orden)session.get(Orden.class, orden_act.getIdOrden()); 
                                orden_act.setInventario(nombre);
                                session.saveOrUpdate(orden_act);

                                //creamos las notificaciones**************
                                ArrayList<Acceso> accesos=new ArrayList();
                                Acceso [] aux1 = (Acceso[])orden_act.getClientes().getAccesos().toArray(new Acceso[0]);
                                accesos.addAll(Arrays.asList(aux1));
                                if(orden_act.getCompania()!=null)
                                {
                                    aux1 = (Acceso[])orden_act.getCompania().getAccesos().toArray(new Acceso[0]);
                                    accesos.addAll(Arrays.asList(aux1));
                                }
                                if(orden_act.getAgente()!=null)
                                {
                                    aux1 = (Acceso[])orden_act.getAgente().getAccesos().toArray(new Acceso[0]);
                                    accesos.addAll(Arrays.asList(aux1));
                                }

                                    String notificaciones="{\"NOTIFICACIONES\":[";
                                    for(int a=0; a<accesos.size(); a++)
                                    {
                                        Notificacion nueva=new Notificacion();
                                        nueva.setMensaje("OT:"+orden_act.getIdOrden()+" Inventario de Ingreso");
                                        nueva.setExtra("");
                                        nueva.setIntentos(0);
                                        nueva.setVisto(false);
                                        nueva.setAcceso(accesos.get(a));
                                        Integer id = (Integer)session.save(nueva);
                                        nueva=(Notificacion)session.get(Notificacion.class, id);
                                        nueva.setExtra("{\"VENTANA\":\"MuestraPDF\",\"ID_ORDEN\":\""+orden_act.getIdOrden()+"\",\"ID_NOTIFICACION\":\""+id+"\",\"ID_USUARIO\":\""+accesos.get(a).getIdAcceso()+"\",\"ARCHIVO\":\""+nombre+"\"}");
                                        session.update(nueva);
                                        notificaciones+="{\"ID\":\""+id+"\"}";
                                        if(a+1 < accesos.size())
                                            notificaciones+=",";
                                    }
                                    notificaciones+="]}";
                                    session.beginTransaction().commit();
                                    try{
                                    PeticionPost service=new PeticionPost("http://tbstoluca.ddns.net/sm-l/service/api.php");
                                    service.add("METODO", "REPARACION.GUARDA_ARCHIVO");
                                    service.add("ID_REPARACION", t_solicitud.getText());
                                    service.add("TIPO", "INVENTARIO");
                                    service.add("ARCHIVO_NOMBRE", nombre);
                                    String resp=service.getRespueta();
                                    System.out.println(resp);
                                    JSONObject respuesta = new JSONObject(resp);
                                    if(respuesta.getInt("ESTADO")==1)
                                    {
                                        JOptionPane.showMessageDialog(this, "EL ARCHIVO FUE CARGADO Y SE NOTIFICO AL CLIENTE");
                                    }
                                    else
                                        JOptionPane.showMessageDialog(this, respuesta.getString("MENSAJE"));
                                    agregaArchivo(nombre, b_desgaste);
                                    }catch(Exception e){
                                        e.printStackTrace();
                                        JOptionPane.showMessageDialog(this, "El archivo fue cargado con exito pero no se pudo notificar al cliente.");
                                    }
                            }
                            miFtp.desconectar();
                        }
                        else
                            JOptionPane.showMessageDialog(null, "No fue posible encontrar el directorio");
                    }
                    else
                        JOptionPane.showMessageDialog(null, "No fue posible conectar al servidor FTP");
                }
            }
        }catch (Exception ioe)
        {
            ioe.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(null, "Error no se pudo cargar el archivo");
        }
        if(session!= null)
            if(session.isOpen())
                session.close(); 
    }//GEN-LAST:event_b_inventario_cargaActionPerformed

    private void b_desgaste_cargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_desgaste_cargaActionPerformed
        // TODO add your handling code here:
        Session session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            File destino=null;
            int estado=selector.showOpenDialog(null);
            File archivo = selector.getSelectedFile();
            if(estado==0)
            {
                if(archivo.exists())
                {
                    Herramientas h = new Herramientas(this.usr, 0);
                    String nombre=b_desgaste.getText();
                    if(nombre.compareTo("pendiente")==0)
                        nombre=h.randomString(11)+".pdf";
                    System.out.println(nombre);
                    Ftp miFtp=new Ftp();
                    if(miFtp.conectar(ruta, "sm", "04650077", 3310))
                    {
                        if(miFtp.cambiarDirectorio("/recursos/reparacion/documentos/desgaste/"))
                        {
                            if(miFtp.subirArchivo(archivo.getPath(), nombre))
                            {
                                session.beginTransaction().begin();
                                orden_act = (Orden)session.get(Orden.class, orden_act.getIdOrden()); 
                                orden_act.setDesgaste(nombre);
                                session.saveOrUpdate(orden_act);

                                //creamos las notificaciones**************
                                ArrayList<Acceso> accesos=new ArrayList();
                                Acceso [] aux1 = (Acceso[])orden_act.getClientes().getAccesos().toArray(new Acceso[0]);
                                accesos.addAll(Arrays.asList(aux1));
                                if(orden_act.getCompania()!=null)
                                {
                                    aux1 = (Acceso[])orden_act.getCompania().getAccesos().toArray(new Acceso[0]);
                                    accesos.addAll(Arrays.asList(aux1));
                                }
                                if(orden_act.getAgente()!=null)
                                {
                                    aux1 = (Acceso[])orden_act.getAgente().getAccesos().toArray(new Acceso[0]);
                                    accesos.addAll(Arrays.asList(aux1));
                                }

                                    String notificaciones="{\"NOTIFICACIONES\":[";
                                    for(int a=0; a<accesos.size(); a++)
                                    {
                                        Notificacion nueva=new Notificacion();
                                        nueva.setMensaje("OT:"+orden_act.getIdOrden()+" Desgaste no atribuible al siniestro");
                                        nueva.setExtra("");
                                        nueva.setIntentos(0);
                                        nueva.setVisto(false);
                                        nueva.setAcceso(accesos.get(a));
                                        Integer id = (Integer)session.save(nueva);
                                        nueva=(Notificacion)session.get(Notificacion.class, id);
                                        nueva.setExtra("{\"VENTANA\":\"MuestraPDF\",\"ID_ORDEN\":\""+orden_act.getIdOrden()+"\",\"ID_NOTIFICACION\":\""+id+"\",\"ID_USUARIO\":\""+accesos.get(a).getIdAcceso()+"\",\"ARCHIVO\":\""+nombre+"\"}");
                                        session.update(nueva);
                                        notificaciones+="{\"ID\":\""+id+"\"}";
                                        if(a+1 < accesos.size())
                                            notificaciones+=",";
                                    }
                                    notificaciones+="]}";
                                    session.beginTransaction().commit();
                                    try{
                                    PeticionPost service=new PeticionPost("http://tbstoluca.ddns.net/sm-l/service/api.php");
                                    service.add("METODO", "REPARACION.GUARDA_ARCHIVO");
                                    service.add("ID_REPARACION", t_solicitud.getText());
                                    service.add("TIPO", "DESGASTE");
                                    service.add("ARCHIVO_NOMBRE", nombre);
                                    String resp=service.getRespueta();
                                    System.out.println(resp);
                                    JSONObject respuesta = new JSONObject(resp);
                                    if(respuesta.getInt("ESTADO")==1)
                                    {
                                        JOptionPane.showMessageDialog(this, "EL ARCHIVO FUE CARGADO Y SE NOTIFICO AL CLIENTE");
                                    }
                                    else
                                        JOptionPane.showMessageDialog(this, respuesta.getString("MENSAJE"));
                                    agregaArchivo(nombre, b_desgaste);
                                    }catch(Exception e){
                                        e.printStackTrace();
                                        JOptionPane.showMessageDialog(this, "El archivo fue cargado con exito pero no se pudo notificar al cliente.");
                                    }
                            }
                            miFtp.desconectar();
                        }
                        else
                            JOptionPane.showMessageDialog(null, "No fue posible encontrar el directorio");
                    }
                    else
                        JOptionPane.showMessageDialog(null, "No fue posible conectar al servidor FTP");
                }
            }
        }catch (Exception ioe)
        {
            ioe.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(null, "Error no se pudo cargar el archivo");
        }
        if(session!= null)
            if(session.isOpen())
                session.close(); 
    }//GEN-LAST:event_b_desgaste_cargaActionPerformed

    private void b_pago_cargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_pago_cargaActionPerformed
        // TODO add your handling code here:        
        Session session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            File destino=null;
            int estado=selector.showOpenDialog(null);
            File archivo = selector.getSelectedFile();
            if(estado==0)
            {
                if(archivo.exists())
                {
                    Herramientas h = new Herramientas(this.usr, 0);
                    String nombre=b_pago.getText();
                    if(nombre.compareTo("pendiente")==0)
                        nombre=h.randomString(11)+".pdf";
                    System.out.println(nombre);
                    Ftp miFtp=new Ftp();
                    if(miFtp.conectar(ruta, "sm", "04650077", 3310))
                    {
                        if(miFtp.cambiarDirectorio("/recursos/reparacion/documentos/pago/"))
                        {
                            if(miFtp.subirArchivo(archivo.getPath(), nombre))
                            {
                                session.beginTransaction().begin();
                                orden_act = (Orden)session.get(Orden.class, orden_act.getIdOrden()); 
                                orden_act.setPago(nombre);
                                session.saveOrUpdate(orden_act);

                                //creamos las notificaciones**************
                                ArrayList<Acceso> accesos=new ArrayList();
                                Acceso [] aux1 = (Acceso[])orden_act.getClientes().getAccesos().toArray(new Acceso[0]);
                                accesos.addAll(Arrays.asList(aux1));
                                if(orden_act.getCompania()!=null)
                                {
                                    aux1 = (Acceso[])orden_act.getCompania().getAccesos().toArray(new Acceso[0]);
                                    accesos.addAll(Arrays.asList(aux1));
                                }
                                if(orden_act.getAgente()!=null)
                                {
                                    aux1 = (Acceso[])orden_act.getAgente().getAccesos().toArray(new Acceso[0]);
                                    accesos.addAll(Arrays.asList(aux1));
                                }

                                    String notificaciones="{\"NOTIFICACIONES\":[";
                                    for(int a=0; a<accesos.size(); a++)
                                    {
                                        Notificacion nueva=new Notificacion();
                                        nueva.setMensaje("OT:"+orden_act.getIdOrden()+" Pago");
                                        nueva.setExtra("");
                                        nueva.setIntentos(0);
                                        nueva.setVisto(false);
                                        nueva.setAcceso(accesos.get(a));
                                        Integer id = (Integer)session.save(nueva);
                                        nueva=(Notificacion)session.get(Notificacion.class, id);
                                        nueva.setExtra("{\"VENTANA\":\"MuestraPDF\",\"ID_ORDEN\":\""+orden_act.getIdOrden()+"\",\"ID_NOTIFICACION\":\""+id+"\",\"ID_USUARIO\":\""+accesos.get(a).getIdAcceso()+"\",\"ARCHIVO\":\""+nombre+"\"}");
                                        session.update(nueva);
                                        notificaciones+="{\"ID\":\""+id+"\"}";
                                        if(a+1 < accesos.size())
                                            notificaciones+=",";
                                    }
                                    notificaciones+="]}";
                                    session.beginTransaction().commit();
                                    try{
                                    PeticionPost service=new PeticionPost("http://tbstoluca.ddns.net/sm-l/service/api.php");
                                    service.add("METODO", "REPARACION.GUARDA_ARCHIVO");
                                    service.add("ID_REPARACION", t_solicitud.getText());
                                    service.add("TIPO", "PAGO");
                                    service.add("ARCHIVO_NOMBRE", nombre);
                                    String resp=service.getRespueta();
                                    System.out.println(resp);
                                    JSONObject respuesta = new JSONObject(resp);
                                    if(respuesta.getInt("ESTADO")==1)
                                    {
                                        JOptionPane.showMessageDialog(this, "EL ARCHIVO FUE CARGADO Y SE NOTIFICO AL CLIENTE");
                                    }
                                    else
                                        JOptionPane.showMessageDialog(this, respuesta.getString("MENSAJE"));
                                    agregaArchivo(nombre, b_pago);
                                    }catch(Exception e){
                                        e.printStackTrace();
                                        JOptionPane.showMessageDialog(this, "El archivo fue cargado con exito pero no se pudo notificar al cliente.");
                                    }
                            }
                            miFtp.desconectar();
                        }
                        else
                            JOptionPane.showMessageDialog(null, "No fue posible encontrar el directorio");
                    }
                    else
                        JOptionPane.showMessageDialog(null, "No fue posible conectar al servidor FTP");
                }
            }
        }catch (Exception ioe)
        {
            ioe.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(null, "Error no se pudo cargar el archivo");
        }
        if(session!= null)
            if(session.isOpen())
                session.close();
    }//GEN-LAST:event_b_pago_cargaActionPerformed

    private void b_cotizacion_cargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cotizacion_cargaActionPerformed
        // TODO add your handling code here:
                Session session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            File destino=null;
            int estado=selector.showOpenDialog(null);
            File archivo = selector.getSelectedFile();
            if(estado==0)
            {
                if(archivo.exists())
                {
                    Herramientas h = new Herramientas(this.usr, 0);
                    String nombre=b_cotizacion.getText();
                    if(nombre.compareTo("pendiente")==0)
                        nombre=h.randomString(11)+".pdf";
                    System.out.println(nombre);
                    Ftp miFtp=new Ftp();
                    if(miFtp.conectar(ruta, "sm", "04650077", 3310))
                    {
                        if(miFtp.cambiarDirectorio("/recursos/reparacion/documentos/cotizacion/"))
                        {
                            if(miFtp.subirArchivo(archivo.getPath(), nombre))
                            {
                                session.beginTransaction().begin();
                                orden_act = (Orden)session.get(Orden.class, orden_act.getIdOrden()); 
                                orden_act.setEntrega(nombre);
                                session.saveOrUpdate(orden_act);

                                //creamos las notificaciones**************
                                ArrayList<Acceso> accesos=new ArrayList();
                                Acceso [] aux1 = (Acceso[])orden_act.getClientes().getAccesos().toArray(new Acceso[0]);
                                accesos.addAll(Arrays.asList(aux1));
                                if(orden_act.getCompania()!=null)
                                {
                                    aux1 = (Acceso[])orden_act.getCompania().getAccesos().toArray(new Acceso[0]);
                                    accesos.addAll(Arrays.asList(aux1));
                                }
                                if(orden_act.getAgente()!=null)
                                {
                                    aux1 = (Acceso[])orden_act.getAgente().getAccesos().toArray(new Acceso[0]);
                                    accesos.addAll(Arrays.asList(aux1));
                                }

                                    String notificaciones="{\"NOTIFICACIONES\":[";
                                    for(int a=0; a<accesos.size(); a++)
                                    {
                                        Notificacion nueva=new Notificacion();
                                        nueva.setMensaje("OT:"+orden_act.getIdOrden()+" Cotizacion");
                                        nueva.setExtra("");
                                        nueva.setIntentos(0);
                                        nueva.setVisto(false);
                                        nueva.setAcceso(accesos.get(a));
                                        Integer id = (Integer)session.save(nueva);
                                        nueva=(Notificacion)session.get(Notificacion.class, id);
                                        nueva.setExtra("{\"VENTANA\":\"MuestraPDF\",\"ID_ORDEN\":\""+orden_act.getIdOrden()+"\",\"ID_NOTIFICACION\":\""+id+"\",\"ID_USUARIO\":\""+accesos.get(a).getIdAcceso()+"\",\"ARCHIVO\":\""+nombre+"\"}");
                                        session.update(nueva);
                                        notificaciones+="{\"ID\":\""+id+"\"}";
                                        if(a+1 < accesos.size())
                                            notificaciones+=",";
                                    }
                                    notificaciones+="]}";
                                    session.beginTransaction().commit();
                                    try{
                                    PeticionPost service=new PeticionPost("http://tbstoluca.ddns.net/sm-l/service/api.php");
                                    service.add("METODO", "REPARACION.GUARDA_ARCHIVO");
                                    service.add("ID_REPARACION", t_solicitud.getText());
                                    service.add("TIPO", "COTIZACION");
                                    service.add("ARCHIVO_NOMBRE", nombre);
                                    String resp=service.getRespueta();
                                    System.out.println(resp);
                                    JSONObject respuesta = new JSONObject(resp);
                                    if(respuesta.getInt("ESTADO")==1)
                                    {
                                        JOptionPane.showMessageDialog(this, "EL ARCHIVO FUE CARGADO Y SE NOTIFICO AL CLIENTE");
                                    }
                                    else
                                        JOptionPane.showMessageDialog(this, respuesta.getString("MENSAJE"));
                                    agregaArchivo(nombre, b_cotizacion);
                                    }catch(Exception e){
                                        e.printStackTrace();
                                        JOptionPane.showMessageDialog(this, "El archivo fue cargado con exito pero no se pudo notificar al cliente.");
                                    }
                            }
                            miFtp.desconectar();
                        }
                        else
                            JOptionPane.showMessageDialog(null, "No fue posible encontrar el directorio");
                    }
                    else
                        JOptionPane.showMessageDialog(null, "No fue posible conectar al servidor FTP");
                }
            }
        }catch (Exception ioe)
        {
            ioe.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(null, "Error no se pudo cargar el archivo");
        }
        if(session!= null)
            if(session.isOpen())
                session.close(); 
    }//GEN-LAST:event_b_cotizacion_cargaActionPerformed

    private void b_inventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_inventarioActionPerformed
        // TODO add your handling code here:
        if(b_inventario.getText().compareToIgnoreCase("pendiente")!=0)
        {
            Ftp miFtp=new Ftp();
            if(miFtp.conectar(ruta, "sm", "04650077", 3310))
            {
                if(miFtp.cambiarDirectorio("/recursos/reparacion/documentos/inventario/"))
                {
                    miFtp.AbrirArchivo(b_inventario.getText());
                    miFtp.desconectar();
                }
                else
                    JOptionPane.showMessageDialog(null, "No fue posible encontrar el directorio");
            }
            else
                JOptionPane.showMessageDialog(null, "No fue posible conectar al servidor FTP");
        }
    }//GEN-LAST:event_b_inventarioActionPerformed

    private void b_desgasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_desgasteActionPerformed
        // TODO add your handling code here:
        if(b_desgaste.getText().compareToIgnoreCase("pendiente")!=0)
        {
            Ftp miFtp=new Ftp();
            if(miFtp.conectar(ruta, "sm", "04650077", 3310))
            {
                if(miFtp.cambiarDirectorio("/recursos/reparacion/documentos/desgaste/"))
                {
                    miFtp.AbrirArchivo(b_desgaste.getText());
                    miFtp.desconectar();
                }
                else
                    JOptionPane.showMessageDialog(null, "No fue posible encontrar el directorio");
            }
            else
                JOptionPane.showMessageDialog(null, "No fue posible conectar al servidor FTP");
        }
    }//GEN-LAST:event_b_desgasteActionPerformed

    private void b_pagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_pagoActionPerformed
        // TODO add your handling code here:
        if(b_pago.getText().compareToIgnoreCase("pendiente")!=0)
        {
            Ftp miFtp=new Ftp();
            if(miFtp.conectar(ruta, "sm", "04650077", 3310))
            {
                if(miFtp.cambiarDirectorio("/recursos/reparacion/documentos/pago/"))
                {
                    miFtp.AbrirArchivo(b_pago.getText());
                    miFtp.desconectar();
                }
                else
                    JOptionPane.showMessageDialog(null, "No fue posible encontrar el directorio");
            }
            else
                JOptionPane.showMessageDialog(null, "No fue posible conectar al servidor FTP");
        }
    }//GEN-LAST:event_b_pagoActionPerformed

    private void b_cotizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cotizacionActionPerformed
        // TODO add your handling code here:
        if(b_cotizacion.getText().compareToIgnoreCase("pendiente")!=0)
        {
            Ftp miFtp=new Ftp();
            if(miFtp.conectar(ruta, "sm", "04650077", 3310))
            {
                if(miFtp.cambiarDirectorio("/recursos/reparacion/documentos/cotizacion/"))
                {
                    miFtp.AbrirArchivo(b_cotizacion.getText());
                    miFtp.desconectar();
                }
                else
                    JOptionPane.showMessageDialog(null, "No fue posible encontrar el directorio");
            }
            else
                JOptionPane.showMessageDialog(null, "No fue posible conectar al servidor FTP");
        }
    }//GEN-LAST:event_b_cotizacionActionPerformed

    private void c_estatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_estatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_estatusActionPerformed

    private void b_autorizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_autorizarActionPerformed
        /*if(t_user.getText().compareTo("")!=0)
        {
            if(t_contra.getPassword().toString().compareTo("")!=0)
            {
                Session session = HibernateUtil.getSessionFactory().openSession();
                try
                {
                    session.beginTransaction().begin();
                    Usuario autoriza = (Usuario)session.createCriteria(Usuario.class).add(Restrictions.eq("idUsuario", t_user.getText())).add(Restrictions.eq("clave", t_contra.getText())).setMaxResults(1).uniqueResult();
                    if(autoriza!=null)
                    {
                        if(autoriza.getAutorizarSobrecosto()==true)
                        {
                            usrAut=autoriza;
                            ListaSOS.dispose();
                        }
                        else
                        JOptionPane.showMessageDialog(this, "¡El usuario no tiene permiso de autorizar!");
                    }
                    else
                    {
                        session.beginTransaction().rollback();
                        JOptionPane.showMessageDialog(this, "¡Datos Incorrectos!");
                        t_user.requestFocus();
                    }
                }catch(Exception e)
                {
                    session.beginTransaction().rollback();
                    JOptionPane.showMessageDialog(this, "¡Error al consultar los datos!");
                    e.printStackTrace();
                }
                finally
                {
                    if(session.isOpen()==true)
                    session.close();
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "¡Ingrese la contraseña!");
                t_contra.requestFocus();
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "¡Ingrese el usuario!");
            t_user.requestFocus();
        }*/
    }//GEN-LAST:event_b_autorizarActionPerformed

    private void c_estatus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_estatus1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_estatus1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog ListaSOS;
    private javax.swing.JButton b_autorizar;
    private javax.swing.JButton b_cotizacion;
    private javax.swing.JButton b_cotizacion_carga;
    private javax.swing.JButton b_desgaste;
    private javax.swing.JButton b_desgaste_carga;
    private javax.swing.JButton b_inventario;
    private javax.swing.JButton b_inventario_carga;
    private javax.swing.JButton b_pago;
    private javax.swing.JButton b_pago_carga;
    private javax.swing.JComboBox c_estatus;
    private javax.swing.JComboBox c_estatus1;
    private javax.swing.JLabel id_sucursal;
    private javax.swing.JLabel id_unidad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField t_autorizo;
    private javax.swing.JTextField t_deducible;
    private javax.swing.JTextField t_demerito;
    private javax.swing.JTextArea t_descripcion;
    private javax.swing.JTextField t_economico;
    private javax.swing.JTextField t_ingreso;
    private javax.swing.JTextField t_promesa;
    private javax.swing.JTextField t_reporte;
    private javax.swing.JTextField t_salida;
    private javax.swing.JTextField t_solicitud;
    // End of variables declaration//GEN-END:variables


    public void buscaDatos()
  {
      Session session = HibernateUtil.getSessionFactory().openSession();
      try
      {
          File f;
          usr = (Usuario)session.get(Usuario.class, usr.getIdUsuario());
          if(usr.getConsultaSm() || usr.getEditaSm())
          {
              orden_act = (Orden)session.get(Orden.class, Integer.parseInt(ord));   
              if(orden_act.getIdSm()!=null){
                  t_solicitud.setText(orden_act.getIdSm());
                  if(usr.getEditaSm())
                  {
                      b_inventario_carga.setEnabled(true);
                      b_desgaste_carga.setEnabled(true);
                      b_pago_carga.setEnabled(true);
                      b_cotizacion_carga.setEnabled(true);
                      //c_estatus.setEnabled(true);
                  }
                  
                  try{
                      PeticionPost service=new PeticionPost("http://tbstoluca.ddns.net/sm-l/service/api.php");
                      service.add("METODO", "REPARACION.CONSULTA_REPARACION");
                      service.add("ID_REPARACION", t_solicitud.getText());
                      System.out.println(service.getRespueta());
                      JSONObject respuesta = new JSONObject(service.getRespueta());
                      if(respuesta.getInt("ESTADO")==1)
                      {
                          JSONArray datos_array=respuesta.getJSONArray("DATOS");
                          JSONObject datos = datos_array.getJSONObject(0);
                          
                          if(datos.get("fecha_llegada").toString().compareToIgnoreCase("null")!=0)
                            t_ingreso.setText(datos.get("fecha_llegada").toString());
                          else
                              t_ingreso.setText(datos.get("pendiente").toString());
                          
                          if(datos.get("fecha_promesa").toString().compareToIgnoreCase("null")!=0)
                            t_promesa.setText(datos.get("fecha_promesa").toString());
                          else
                              t_promesa.setText("pendiente");
                          
                          if(datos.get("fecha_entrega").toString().compareToIgnoreCase("null")!=0)
                            t_salida.setText(datos.get("fecha_entrega").toString());
                          else
                              t_salida.setText("pendiente");
                          
                          if(datos.get("deducible").toString().compareToIgnoreCase("null")!=0)
                            t_deducible.setText(datos.get("deducible").toString());
                          else
                              t_deducible.setText("pendiente");
                          
                          if(datos.get("demerito").toString().compareToIgnoreCase("null")!=0)
                            t_demerito.setText(datos.get("demerito").toString());
                          else
                              t_demerito.setText("pendiente");
                          
                          if(datos.get("descripcion").toString().compareToIgnoreCase("null")!=0)
                            t_descripcion.setText(datos.get("descripcion").toString());
                          else
                              t_descripcion.setText("");
                          
                          if(datos.get("autorizo").toString().compareToIgnoreCase("null")!=0)
                            t_autorizo.setText(datos.get("autorizo").toString());
                          else
                              t_autorizo.setText("pendiente");
                          
                          if(datos.get("n_economico").toString().compareToIgnoreCase("null")!=0)
                            t_economico.setText(datos.get("n_economico").toString());
                          else
                              t_economico.setText("-");
                          
                          if(datos.get("no_reporte_cabina").toString().compareToIgnoreCase("null")!=0)
                              t_reporte.setText(datos.get("no_reporte_cabina").toString());
                          else
                              t_reporte.setText("-");
                          
                          if(datos.get("inventario").toString().compareToIgnoreCase("null")!=0)
                              agregaArchivo(datos.get("inventario").toString(), b_inventario);
                          else
                              b_inventario.setText("pendiente");
                          
                          if(datos.get("pago").toString().compareToIgnoreCase("null")!=0)
                              agregaArchivo(datos.get("pago").toString(), b_pago);
                          else
                              b_pago.setText("pendiente");
                          
                          if(datos.get("cotizacion").toString().compareToIgnoreCase("null")!=0)
                              agregaArchivo(datos.get("cotizacion").toString(), b_cotizacion);
                          else
                              b_cotizacion.setText("pendiente");
                          
                          if(datos.get("desgaste").toString().compareToIgnoreCase("null")!=0)
                            agregaArchivo(datos.get("desgaste").toString(), b_desgaste);
                          else
                               b_desgaste.setText("pendiente");
                          
                          if(datos.get("id_unidad").toString().compareToIgnoreCase("null")!=0)
                            id_unidad.setText(datos.get("id_unidad").toString());
                          else
                               id_unidad.setText("");
                          
                          if(datos.get("id_sucursal").toString().compareToIgnoreCase("null")!=0)
                            id_sucursal.setText(datos.get("id_sucursal").toString());
                          else
                               id_sucursal.setText("");
                          
                      }
                      else
                      {
                          JOptionPane.showMessageDialog(this, respuesta.getString("MENSAJE"));
                      }
                  }catch(Exception e){
                      e.printStackTrace();
                      JOptionPane.showMessageDialog(this, "Error Al Conectar con el Servidor");
                  }
                  
              }
              else
              {
                  if(usr.getEditaSm())
                  {
                      b_inventario_carga.setEnabled(false);
                      b_desgaste_carga.setEnabled(false);
                      b_pago_carga.setEnabled(false);
                      b_cotizacion_carga.setEnabled(false);
                      c_estatus.setEnabled(false);
                  }
              }
          }
          else
          {
              JOptionPane.showMessageDialog(null, "¡Acceso denegado!");
          }
      }catch(Exception e)
      {
          System.out.println(e);
          this.setVisible(false);
      }
      if(session!=null)
            if(session.isOpen()==true)
                session.close();
  }
    
    //generate uri according to the filePath
  private URI getFileURI(String filePath)
  {
    URI uri = null;
    filePath = filePath.trim();
    if(filePath.indexOf("http") == 0 || filePath.indexOf("\\") == 0)
    {
      if(filePath.indexOf("\\") == 0) filePath = "file:" + filePath;
      try
      {
        filePath = filePath.replaceAll(" ", "%20");
        URL url = new URL(filePath);
        uri = url.toURI();
      } catch (MalformedURLException ex)
      {
        ex.printStackTrace();
      }
      catch (URISyntaxException ex)
      {
        ex.printStackTrace();
      }
    }
    else
    {
      File file = new File(filePath);
      uri = file.toURI();
    }
    return uri;
  }
  
  void agregaArchivo(String nombre, JButton bt){
        if(nombre.contains(".pdf") || nombre.contains(".PDF"))
            bt.setIcon(new ImageIcon("imagenes/pdf.png"));
        else
        {
            if(nombre.contains(".docx") || nombre.contains(".DOCX"))
                bt.setIcon(new ImageIcon("imagenes/word.png"));
            else
                bt.setIcon(new ImageIcon("imagenes/desconocido.png"));
        }
        bt.setText(nombre);
  }
  
    private List<Object[]> executeHQLQuery(String hql) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        try {
            session.beginTransaction();
            Query q = session.createQuery(hql);
            List resultList = q.list();
            session.getTransaction().commit();
            session.disconnect();
            return resultList;
        } catch (HibernateException he) {
            he.printStackTrace();
            List lista = null;
            return lista;
        } finally {
            if (session.isOpen()) {
                session.close();
            }
        }
    }
 }

