/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Servicios;

import Agente.buscaAgentes;
import Ajustador.buscaAjustadores;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import Hibernate.entidades.Estatus;
import Hibernate.entidades.Compania;
import Hibernate.entidades.Clientes;
import Hibernate.entidades.Marca;
import Hibernate.entidades.Orden;
import Hibernate.entidades.Tipo;
import Hibernate.entidades.Usuario;
import Hibernate.entidades.Foto;

import Hibernate.Util.HibernateUtil;
import Compania.buscaCompania;
import Clientes.buscaCliente;
import Empleados.buscaEmpleado;
import Hibernate.entidades.Agente;
import Hibernate.entidades.Ajustador;
import Hibernate.entidades.Ciclo;
import Hibernate.entidades.Empleado;
import Hibernate.entidades.Reparacion;
import Marca.buscaMarca;
import Tipo.buscaTipo;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.File;
import javax.imageio.ImageIO;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFileChooser;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import Integral.calendario;
import Integral.Imagen;
import Integral.ExtensionFileFilter;
import Integral.Ftp;
import java.awt.Graphics;
import org.hibernate.criterion.Restrictions;
import Integral.Herramientas;

/**
 *
 * @author I.S.C Salvador
 */
public class AperturaOrden extends javax.swing.JPanel {

    Pattern patronEntero=Pattern.compile("[☺☻♥♦.♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\"#$%&'()*+,--/:;<=>?@A-z{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáìóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±┬¾¶§÷¸°¨·¹³²■ ]*");
    Matcher encaja=patronEntero.matcher("1");
    Pattern patronFecha = Pattern.compile("^d{4}/d{2}/d{2}");
    String dia, mes, anio;
    Calendar cal = Calendar.getInstance();
    Usuario usr;
    String periodo=null;
    File archivo=null;
    Orden registro = null;
    int entro_foto=0;
    String sessionPrograma="";
    Herramientas h;
    String ruta;
    String id_ajustador="";
    String id_agente="";
    String id_tecnico="";
    int configuracion=1;
    /**
     * Creates new form altaServicios
     */
    public AperturaOrden(Usuario usuario, String envio_periodo, String programa, String rutaFTP, int configuracion) {
        sessionPrograma=programa;
        this.configuracion=configuracion;
        usr=usuario;
        periodo=envio_periodo;
        ruta=rutaFTP;
        initComponents();
        cargaEstatus();
        p_foto.add(new Imagen("imagenes/foto.png", 128, 168, 4, 4, 128,168));
        p_foto.repaint();
        
        cb_tipo_cliente.addItem("Asegurado");
        cb_tipo_cliente.addItem("Tercero");
        cb_tipo_cliente.addItem("Tercero Aseg.");
        cb_tipo_cliente.addItem("Particular");
        this.b_busca_cliente.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooserDialog1 = new datechooser.beans.DateChooserDialog();
        t_aseguradora = new javax.swing.JTextField();
        l_id_cliente = new javax.swing.JLabel();
        t_marca = new javax.swing.JTextField();
        t_fecha_estatus = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        b_marca = new javax.swing.JButton();
        l_nombre_marca = new javax.swing.JLabel();
        b_tipo = new javax.swing.JButton();
        t_tipo = new javax.swing.JTextField();
        l_serie = new javax.swing.JLabel();
        t_serie = new javax.swing.JTextField();
        l_motor = new javax.swing.JLabel();
        t_motor = new javax.swing.JTextField();
        l_placas = new javax.swing.JLabel();
        t_placas = new javax.swing.JTextField();
        l_economico = new javax.swing.JLabel();
        t_economico = new javax.swing.JTextField();
        l_modelo = new javax.swing.JLabel();
        t_modelo = new javax.swing.JFormattedTextField();
        l_km = new javax.swing.JLabel();
        t_km = new javax.swing.JTextField();
        l_color = new javax.swing.JLabel();
        t_color = new javax.swing.JTextField();
        l_cliente = new javax.swing.JLabel();
        cb_tipo_cliente = new javax.swing.JComboBox();
        p_foto = new javax.swing.JPanel();
        b_guardar = new javax.swing.JButton();
        b_cancelar = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        b_fecha_interna = new javax.swing.JButton();
        t_fecha_interna = new javax.swing.JTextField();
        b_fecha_cliente = new javax.swing.JButton();
        t_fecha_cliente = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        b_buscar_aseguradora = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        t_siniestro = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        b_fecha_siniestro = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        t_poliza = new javax.swing.JTextField();
        t_inciso = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        t_reporte = new javax.swing.JTextField();
        l_nombre_aseguradora = new javax.swing.JLabel();
        t_fecha_siniestro = new javax.swing.JTextField();
        b_ajustador = new javax.swing.JButton();
        t_ajustador = new javax.swing.JTextField();
        b_agente = new javax.swing.JButton();
        t_agente = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        l_nombre = new javax.swing.JLabel();
        t_nombre_cliente = new javax.swing.JTextField();
        l_rfc_cliente = new javax.swing.JLabel();
        t_rfc_cliente = new javax.swing.JTextField();
        l_direccion_cliente = new javax.swing.JLabel();
        t_direccion_cliente = new javax.swing.JTextField();
        l_contacto_cliente = new javax.swing.JLabel();
        t_contacto_cliente = new javax.swing.JTextField();
        l_email_cliente = new javax.swing.JLabel();
        t_email_cliente = new javax.swing.JTextField();
        l_telefono_cliente = new javax.swing.JLabel();
        t_telefono_cliente = new javax.swing.JFormattedTextField();
        b_guardar_cliente = new javax.swing.JButton();
        b_busca_cliente = new javax.swing.JButton();
        b_nuevo_cliente = new javax.swing.JButton();
        l_numero_cliente = new javax.swing.JLabel();
        t_numero_cliente = new javax.swing.JTextField();
        l_cp_cliente = new javax.swing.JLabel();
        t_cp_cliente = new javax.swing.JTextField();
        cb_edo_cliente = new javax.swing.JComboBox();
        t_municipio_cliente = new javax.swing.JTextField();
        l_municipio_cliente = new javax.swing.JLabel();
        l_edo_cliente = new javax.swing.JLabel();
        t_poblacion_cliente = new javax.swing.JTextField();
        l_poblacion_cliente = new javax.swing.JLabel();
        t_colonia_cliente = new javax.swing.JTextField();
        l_colonia_cliente = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        c_estatus = new javax.swing.JComboBox();
        b_buscarh = new javax.swing.JButton();
        t_tecnico = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        c_siniestro = new javax.swing.JComboBox();
        t_garantia = new javax.swing.JTextField();
        cb_garantia = new javax.swing.JCheckBox();

        t_aseguradora.setBackground(new java.awt.Color(204, 255, 255));
        t_aseguradora.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        t_marca.setBackground(new java.awt.Color(204, 255, 255));
        t_marca.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        t_fecha_estatus.setBackground(new java.awt.Color(204, 255, 255));
        t_fecha_estatus.setForeground(new java.awt.Color(51, 0, 255));
        t_fecha_estatus.setText("DD-MM-AAAA");
        t_fecha_estatus.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_fecha_estatus.setEnabled(false);

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 204), 3, true), "Apertura de Ordenes", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 16), new java.awt.Color(1, 42, 102))); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 204), 2, true), "Datos de la Unidad", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 11), new java.awt.Color(0, 204, 204))); // NOI18N

        b_marca.setBackground(new java.awt.Color(2, 135, 242));
        b_marca.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        b_marca.setForeground(new java.awt.Color(255, 255, 255));
        b_marca.setText("Marca");
        b_marca.setToolTipText("Consultar marcas");
        b_marca.setMaximumSize(new java.awt.Dimension(32, 8));
        b_marca.setMinimumSize(new java.awt.Dimension(32, 8));
        b_marca.setPreferredSize(new java.awt.Dimension(28, 24));
        b_marca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_marcaActionPerformed(evt);
            }
        });

        l_nombre_marca.setBackground(new java.awt.Color(255, 255, 255));
        l_nombre_marca.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        l_nombre_marca.setText("Seleccione una marca");
        l_nombre_marca.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));

        b_tipo.setBackground(new java.awt.Color(2, 135, 242));
        b_tipo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        b_tipo.setForeground(new java.awt.Color(255, 255, 255));
        b_tipo.setText("Tipo");
        b_tipo.setToolTipText("Consultar Tipos de vehículo");
        b_tipo.setMargin(new java.awt.Insets(1, 14, 1, 14));
        b_tipo.setMaximumSize(new java.awt.Dimension(28, 24));
        b_tipo.setMinimumSize(new java.awt.Dimension(28, 24));
        b_tipo.setPreferredSize(new java.awt.Dimension(28, 24));
        b_tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_tipoActionPerformed(evt);
            }
        });

        t_tipo.setEditable(false);
        t_tipo.setBackground(new java.awt.Color(255, 255, 255));
        t_tipo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_tipo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_tipo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_tipoFocusLost(evt);
            }
        });
        t_tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_tipoActionPerformed(evt);
            }
        });
        t_tipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_tipoKeyTyped(evt);
            }
        });

        l_serie.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_serie.setText("Serie:");

        t_serie.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_serie.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_serie.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_serieFocusLost(evt);
            }
        });
        t_serie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_serieActionPerformed(evt);
            }
        });
        t_serie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_serieKeyTyped(evt);
            }
        });

        l_motor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_motor.setText("Motor:");

        t_motor.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_motor.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_motor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_motorFocusLost(evt);
            }
        });
        t_motor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_motorActionPerformed(evt);
            }
        });
        t_motor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_motorKeyTyped(evt);
            }
        });

        l_placas.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_placas.setText("Placas:");

        t_placas.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_placas.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_placas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_placasFocusLost(evt);
            }
        });
        t_placas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_placasActionPerformed(evt);
            }
        });
        t_placas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_placasKeyTyped(evt);
            }
        });

        l_economico.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_economico.setText("Económico:");

        t_economico.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_economico.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_economico.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_economicoFocusLost(evt);
            }
        });
        t_economico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_economicoActionPerformed(evt);
            }
        });
        t_economico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_economicoKeyTyped(evt);
            }
        });

        l_modelo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_modelo.setForeground(new java.awt.Color(51, 0, 255));
        l_modelo.setText("Año:");

        t_modelo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_modelo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##0"))));
        t_modelo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_modelo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_modeloFocusLost(evt);
            }
        });
        t_modelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_modeloActionPerformed(evt);
            }
        });

        l_km.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_km.setText("Km:");

        t_km.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_km.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_km.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_kmFocusLost(evt);
            }
        });
        t_km.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_kmActionPerformed(evt);
            }
        });
        t_km.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_kmKeyTyped(evt);
            }
        });

        l_color.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_color.setText("Color:");

        t_color.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_color.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_color.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_colorFocusLost(evt);
            }
        });
        t_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_colorActionPerformed(evt);
            }
        });
        t_color.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_colorKeyTyped(evt);
            }
        });

        l_cliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_cliente.setText("Cliente:");

        cb_tipo_cliente.setBackground(new java.awt.Color(204, 255, 255));
        cb_tipo_cliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cb_tipo_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tipo_clienteActionPerformed(evt);
            }
        });

        p_foto.setBackground(new java.awt.Color(2, 135, 242));
        p_foto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        p_foto.setToolTipText("Agregar imagen de la unidad");
        p_foto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p_foto.setPreferredSize(new java.awt.Dimension(84, 94));
        p_foto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_fotoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p_fotoLayout = new javax.swing.GroupLayout(p_foto);
        p_foto.setLayout(p_fotoLayout);
        p_fotoLayout.setHorizontalGroup(
            p_fotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );
        p_fotoLayout.setVerticalGroup(
            p_fotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(p_foto, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(l_modelo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t_modelo)
                                .addGap(63, 63, 63)
                                .addComponent(l_km)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_km))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(b_marca, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(l_nombre_marca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(b_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_tipo))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(l_serie)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_serie))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(l_motor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_motor))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(l_placas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_placas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(l_economico)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_economico))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(l_color)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_color, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_tipo_cliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b_marca, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_nombre_marca, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_serie)
                            .addComponent(t_serie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_motor)
                            .addComponent(t_motor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(t_placas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(l_economico)
                                .addComponent(t_economico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(l_placas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_modelo)
                            .addComponent(t_modelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_km, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_km)))
                    .addComponent(p_foto, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cb_tipo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(l_cliente))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_color)
                            .addComponent(t_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        b_guardar.setBackground(new java.awt.Color(2, 135, 242));
        b_guardar.setForeground(new java.awt.Color(255, 255, 255));
        b_guardar.setIcon(new ImageIcon("imagenes/guardar.png"));
        b_guardar.setText("Guardar");
        b_guardar.setToolTipText("Guardar orden actual");
        b_guardar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_guardar.setNextFocusableComponent(b_cancelar);
        b_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_guardarActionPerformed(evt);
            }
        });

        b_cancelar.setBackground(new java.awt.Color(2, 135, 242));
        b_cancelar.setForeground(new java.awt.Color(255, 255, 255));
        b_cancelar.setIcon(new ImageIcon("imagenes/cancelar.png"));
        b_cancelar.setText("Cancelar");
        b_cancelar.setToolTipText("Cancelar orden actual");
        b_cancelar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_cancelar.setNextFocusableComponent(b_marca);
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 0, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Nota: Los campos en azul son obligatorios");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 204), 2, true), "Fecha de Entrega", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 11), new java.awt.Color(0, 204, 204))); // NOI18N
        jPanel5.setOpaque(false);

        b_fecha_interna.setBackground(new java.awt.Color(2, 135, 242));
        b_fecha_interna.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        b_fecha_interna.setForeground(new java.awt.Color(255, 255, 255));
        b_fecha_interna.setText("Interna");
        b_fecha_interna.setToolTipText("Calendario");
        b_fecha_interna.setMaximumSize(new java.awt.Dimension(32, 8));
        b_fecha_interna.setMinimumSize(new java.awt.Dimension(32, 8));
        b_fecha_interna.setPreferredSize(new java.awt.Dimension(28, 24));
        b_fecha_interna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_fecha_internaActionPerformed(evt);
            }
        });

        t_fecha_interna.setEditable(false);
        t_fecha_interna.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_fecha_interna.setText("DD-MM-AAAA HH:MM:SS");
        t_fecha_interna.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));

        b_fecha_cliente.setBackground(new java.awt.Color(2, 135, 242));
        b_fecha_cliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        b_fecha_cliente.setForeground(new java.awt.Color(255, 255, 255));
        b_fecha_cliente.setText("Cliente");
        b_fecha_cliente.setToolTipText("Calendario");
        b_fecha_cliente.setMaximumSize(new java.awt.Dimension(32, 8));
        b_fecha_cliente.setMinimumSize(new java.awt.Dimension(32, 8));
        b_fecha_cliente.setPreferredSize(new java.awt.Dimension(28, 24));
        b_fecha_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_fecha_clienteActionPerformed(evt);
            }
        });

        t_fecha_cliente.setEditable(false);
        t_fecha_cliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_fecha_cliente.setText("DD-MM-AAAA HH:MM:SS");
        t_fecha_cliente.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(b_fecha_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(t_fecha_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(b_fecha_interna, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(t_fecha_interna, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_fecha_interna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_fecha_interna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_fecha_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_fecha_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 204), 2, true), "Datos de la Aseguradora", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 11), new java.awt.Color(0, 204, 204))); // NOI18N

        b_buscar_aseguradora.setBackground(new java.awt.Color(2, 135, 242));
        b_buscar_aseguradora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/buscar.png"))); // NOI18N
        b_buscar_aseguradora.setToolTipText("Consultar aseguradoras");
        b_buscar_aseguradora.setMaximumSize(new java.awt.Dimension(32, 8));
        b_buscar_aseguradora.setMinimumSize(new java.awt.Dimension(32, 8));
        b_buscar_aseguradora.setPreferredSize(new java.awt.Dimension(32, 8));
        b_buscar_aseguradora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_buscar_aseguradoraActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Siniestro:");

        t_siniestro.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_siniestro.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_siniestro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_siniestroFocusLost(evt);
            }
        });
        t_siniestro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_siniestroActionPerformed(evt);
            }
        });
        t_siniestro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_siniestroKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Fecha:");

        b_fecha_siniestro.setBackground(new java.awt.Color(2, 135, 242));
        b_fecha_siniestro.setIcon(new ImageIcon("imagenes/calendario.png"));
        b_fecha_siniestro.setToolTipText("Calendario");
        b_fecha_siniestro.setMaximumSize(new java.awt.Dimension(32, 8));
        b_fecha_siniestro.setMinimumSize(new java.awt.Dimension(32, 8));
        b_fecha_siniestro.setPreferredSize(new java.awt.Dimension(32, 8));
        b_fecha_siniestro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_fecha_siniestroActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Poliza:");

        t_poliza.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_poliza.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_poliza.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_polizaFocusLost(evt);
            }
        });
        t_poliza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_polizaActionPerformed(evt);
            }
        });
        t_poliza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_polizaKeyTyped(evt);
            }
        });

        t_inciso.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_inciso.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_inciso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_incisoFocusLost(evt);
            }
        });
        t_inciso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_incisoActionPerformed(evt);
            }
        });
        t_inciso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_incisoKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Inciso:");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Reporte:");

        t_reporte.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_reporte.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_reporte.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_reporteFocusLost(evt);
            }
        });
        t_reporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_reporteActionPerformed(evt);
            }
        });
        t_reporte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_reporteKeyTyped(evt);
            }
        });

        l_nombre_aseguradora.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        l_nombre_aseguradora.setText("Seleccione una aseguradora");
        l_nombre_aseguradora.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        l_nombre_aseguradora.setNextFocusableComponent(t_siniestro);

        t_fecha_siniestro.setEditable(false);
        t_fecha_siniestro.setBackground(new java.awt.Color(204, 255, 255));
        t_fecha_siniestro.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_fecha_siniestro.setText("DD-MM-AAAA");
        t_fecha_siniestro.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_fecha_siniestro.setEnabled(false);

        b_ajustador.setBackground(new java.awt.Color(2, 135, 242));
        b_ajustador.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        b_ajustador.setForeground(new java.awt.Color(255, 255, 255));
        b_ajustador.setText("Ajustador");
        b_ajustador.setToolTipText("Calendario");
        b_ajustador.setMaximumSize(new java.awt.Dimension(32, 8));
        b_ajustador.setMinimumSize(new java.awt.Dimension(32, 8));
        b_ajustador.setPreferredSize(new java.awt.Dimension(28, 24));
        b_ajustador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_ajustadorActionPerformed(evt);
            }
        });

        t_ajustador.setEditable(false);
        t_ajustador.setBackground(new java.awt.Color(204, 255, 255));
        t_ajustador.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_ajustador.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_ajustador.setNextFocusableComponent(t_placas);

        b_agente.setBackground(new java.awt.Color(2, 135, 242));
        b_agente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        b_agente.setForeground(new java.awt.Color(255, 255, 255));
        b_agente.setText("Agente");
        b_agente.setToolTipText("Calendario");
        b_agente.setMaximumSize(new java.awt.Dimension(32, 8));
        b_agente.setMinimumSize(new java.awt.Dimension(32, 8));
        b_agente.setPreferredSize(new java.awt.Dimension(28, 24));
        b_agente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_agenteActionPerformed(evt);
            }
        });

        t_agente.setEditable(false);
        t_agente.setBackground(new java.awt.Color(204, 255, 255));
        t_agente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_agente.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_agente.setNextFocusableComponent(t_placas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(b_ajustador, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_ajustador))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(b_buscar_aseguradora, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(l_nombre_aseguradora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(t_inciso))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(t_siniestro))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(t_poliza))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_reporte, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_fecha_siniestro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_fecha_siniestro, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(b_agente, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_agente)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(b_buscar_aseguradora, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_nombre_aseguradora, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(t_siniestro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(t_poliza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_inciso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(t_reporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(t_fecha_siniestro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel7))
                    .addComponent(b_fecha_siniestro, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_ajustador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_ajustador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_agente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_agente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 204), 2, true), "Datos del Cliente", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 11), new java.awt.Color(0, 204, 204))); // NOI18N
        jPanel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        l_nombre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_nombre.setForeground(new java.awt.Color(51, 0, 255));
        l_nombre.setText("Nombre:");

        t_nombre_cliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_nombre_cliente.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_nombre_cliente.setNextFocusableComponent(t_rfc_cliente);
        t_nombre_cliente.setOpaque(false);
        t_nombre_cliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_nombre_clienteFocusLost(evt);
            }
        });
        t_nombre_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_nombre_clienteActionPerformed(evt);
            }
        });
        t_nombre_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_nombre_clienteKeyTyped(evt);
            }
        });

        l_rfc_cliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_rfc_cliente.setText("RFC:");

        t_rfc_cliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_rfc_cliente.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_rfc_cliente.setNextFocusableComponent(t_cp_cliente);
        t_rfc_cliente.setOpaque(false);
        t_rfc_cliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_rfc_clienteFocusLost(evt);
            }
        });
        t_rfc_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_rfc_clienteActionPerformed(evt);
            }
        });
        t_rfc_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_rfc_clienteKeyTyped(evt);
            }
        });

        l_direccion_cliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_direccion_cliente.setText("Dir:");

        t_direccion_cliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_direccion_cliente.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_direccion_cliente.setNextFocusableComponent(t_numero_cliente);
        t_direccion_cliente.setOpaque(false);
        t_direccion_cliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_direccion_clienteFocusLost(evt);
            }
        });
        t_direccion_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_direccion_clienteActionPerformed(evt);
            }
        });
        t_direccion_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_direccion_clienteKeyTyped(evt);
            }
        });

        l_contacto_cliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_contacto_cliente.setText("Contacto:");

        t_contacto_cliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_contacto_cliente.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_contacto_cliente.setNextFocusableComponent(t_email_cliente);
        t_contacto_cliente.setOpaque(false);
        t_contacto_cliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_contacto_clienteFocusLost(evt);
            }
        });
        t_contacto_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_contacto_clienteKeyTyped(evt);
            }
        });

        l_email_cliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_email_cliente.setForeground(new java.awt.Color(51, 0, 255));
        l_email_cliente.setText("email:");

        t_email_cliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_email_cliente.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_email_cliente.setNextFocusableComponent(t_telefono_cliente);
        t_email_cliente.setOpaque(false);
        t_email_cliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_email_clienteFocusLost(evt);
            }
        });
        t_email_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_email_clienteActionPerformed(evt);
            }
        });
        t_email_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_email_clienteKeyTyped(evt);
            }
        });

        l_telefono_cliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_telefono_cliente.setText("Tel:");

        t_telefono_cliente.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        try {
            t_telefono_cliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        t_telefono_cliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_telefono_cliente.setNextFocusableComponent(b_buscarh);
        t_telefono_cliente.setOpaque(false);
        t_telefono_cliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_telefono_clienteFocusLost(evt);
            }
        });
        t_telefono_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_telefono_clienteActionPerformed(evt);
            }
        });
        t_telefono_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_telefono_clienteKeyTyped(evt);
            }
        });

        b_guardar_cliente.setBackground(new java.awt.Color(2, 135, 242));
        b_guardar_cliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/guardar.png"))); // NOI18N
        b_guardar_cliente.setToolTipText("Guardar Cliente");
        b_guardar_cliente.setMaximumSize(new java.awt.Dimension(32, 8));
        b_guardar_cliente.setMinimumSize(new java.awt.Dimension(32, 8));
        b_guardar_cliente.setPreferredSize(new java.awt.Dimension(32, 8));
        b_guardar_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_guardar_clienteActionPerformed(evt);
            }
        });

        b_busca_cliente.setBackground(new java.awt.Color(2, 135, 242));
        b_busca_cliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/buscar.png"))); // NOI18N
        b_busca_cliente.setToolTipText("Consultar clientes");
        b_busca_cliente.setMaximumSize(new java.awt.Dimension(32, 8));
        b_busca_cliente.setMinimumSize(new java.awt.Dimension(32, 8));
        b_busca_cliente.setPreferredSize(new java.awt.Dimension(32, 8));
        b_busca_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_busca_clienteActionPerformed(evt);
            }
        });

        b_nuevo_cliente.setBackground(new java.awt.Color(2, 135, 242));
        b_nuevo_cliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/add-user.png"))); // NOI18N
        b_nuevo_cliente.setToolTipText("Nuevo Cliente");
        b_nuevo_cliente.setMaximumSize(new java.awt.Dimension(32, 8));
        b_nuevo_cliente.setMinimumSize(new java.awt.Dimension(32, 8));
        b_nuevo_cliente.setPreferredSize(new java.awt.Dimension(32, 8));
        b_nuevo_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_nuevo_clienteActionPerformed(evt);
            }
        });

        l_numero_cliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_numero_cliente.setText("No°");

        t_numero_cliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_numero_cliente.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_numero_cliente.setNextFocusableComponent(cb_edo_cliente);
        t_numero_cliente.setOpaque(false);
        t_numero_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_numero_clienteKeyTyped(evt);
            }
        });

        l_cp_cliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_cp_cliente.setText("C.P.");

        t_cp_cliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_cp_cliente.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_cp_cliente.setNextFocusableComponent(t_direccion_cliente);
        t_cp_cliente.setOpaque(false);
        t_cp_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_cp_clienteKeyTyped(evt);
            }
        });

        cb_edo_cliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cb_edo_cliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AGUASCALIENTES", "BAJA CALIFORNIA", "BAJA CALIFORNIA SUR", "CAMPECHE", "CHIAPAS", "CHIHUAHUA", "COAHUILA", "COLIMA", "CIUDAD DE MÉXICO", "DURANGO", "ESTADO DE MÉXICO", "GUANAJUATO", "GUERRERO", "HIDALGO", "JALISCO", "MICHOACAN", "MORELOS", "NAYARIT", "NUEVO LEON", "OAXACA", "PUEBLA", "QUERETARO", "QUINTANA ROO", "SAN LUIS POTOSI", "SINALOA", "SONORA", "TABASCO", "TAMAULIPAS", "TLAXCALA", "VERACRUZ", "YUCATAN", "ZACATECAS" }));
        cb_edo_cliente.setSelectedItem("CIUDAD DE MÉXICO");
        cb_edo_cliente.setName(""); // NOI18N
        cb_edo_cliente.setNextFocusableComponent(t_municipio_cliente);

        t_municipio_cliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_municipio_cliente.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_municipio_cliente.setNextFocusableComponent(t_poblacion_cliente);
        t_municipio_cliente.setOpaque(false);
        t_municipio_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_municipio_clienteKeyTyped(evt);
            }
        });

        l_municipio_cliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_municipio_cliente.setText("Mpio:");

        l_edo_cliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_edo_cliente.setForeground(new java.awt.Color(51, 0, 255));
        l_edo_cliente.setText("Edo:");

        t_poblacion_cliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_poblacion_cliente.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_poblacion_cliente.setNextFocusableComponent(t_colonia_cliente);
        t_poblacion_cliente.setOpaque(false);
        t_poblacion_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_poblacion_clienteKeyTyped(evt);
            }
        });

        l_poblacion_cliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_poblacion_cliente.setText("Población:");

        t_colonia_cliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_colonia_cliente.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));
        t_colonia_cliente.setNextFocusableComponent(t_contacto_cliente);
        t_colonia_cliente.setOpaque(false);
        t_colonia_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_colonia_clienteKeyTyped(evt);
            }
        });

        l_colonia_cliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        l_colonia_cliente.setText("Colonia:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b_busca_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_nuevo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_guardar_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(l_contacto_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_contacto_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_email_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_email_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_telefono_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_telefono_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(l_nombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_nombre_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_rfc_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_rfc_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_cp_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_cp_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(l_direccion_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_direccion_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_numero_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_numero_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_edo_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_edo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_municipio_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_municipio_cliente))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(l_poblacion_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_poblacion_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_colonia_cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(t_colonia_cliente)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(b_busca_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_nuevo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t_nombre_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_cp_cliente)
                            .addComponent(t_cp_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_rfc_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_rfc_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_nombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(t_direccion_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(t_municipio_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(l_direccion_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cb_edo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(l_edo_cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(l_municipio_cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(l_numero_cliente)
                                    .addComponent(t_numero_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t_poblacion_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_poblacion_cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t_colonia_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_colonia_cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(b_guardar_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(l_contacto_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(t_contacto_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(t_telefono_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(l_telefono_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(l_email_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(t_email_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 204), 2, true), "Control Taller", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 11), new java.awt.Color(0, 204, 204))); // NOI18N
        jPanel4.setOpaque(false);

        c_estatus.setBackground(new java.awt.Color(204, 255, 255));
        c_estatus.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        c_estatus.setForeground(new java.awt.Color(51, 0, 255));
        c_estatus.setNextFocusableComponent(c_siniestro);
        c_estatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_estatusActionPerformed(evt);
            }
        });

        b_buscarh.setBackground(new java.awt.Color(2, 135, 242));
        b_buscarh.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        b_buscarh.setForeground(new java.awt.Color(255, 255, 255));
        b_buscarh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/buscar.png"))); // NOI18N
        b_buscarh.setText("Supervisor");
        b_buscarh.setToolTipText("Consultar Supervisor");
        b_buscarh.setMaximumSize(new java.awt.Dimension(32, 8));
        b_buscarh.setMinimumSize(new java.awt.Dimension(32, 8));
        b_buscarh.setPreferredSize(new java.awt.Dimension(32, 8));
        b_buscarh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_buscarhActionPerformed(evt);
            }
        });

        t_tecnico.setEditable(false);
        t_tecnico.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        t_tecnico.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));

        jLabel34.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel34.setText("Estatus");

        jLabel33.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel33.setText("Siniestro:");

        c_siniestro.setBackground(new java.awt.Color(204, 255, 255));
        c_siniestro.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        c_siniestro.setForeground(new java.awt.Color(51, 0, 255));
        c_siniestro.setNextFocusableComponent(cb_garantia);
        c_siniestro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_siniestroActionPerformed(evt);
            }
        });

        t_garantia.setEditable(false);
        t_garantia.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        t_garantia.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 204, 204)));

        cb_garantia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cb_garantia.setText("Garantia");
        cb_garantia.setNextFocusableComponent(b_guardar);
        cb_garantia.setOpaque(false);
        cb_garantia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_garantiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c_estatus, 0, 1, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c_siniestro, 0, 1, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_garantia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_garantia, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(b_buscarh, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_tecnico)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(b_buscarh, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_tecnico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(c_estatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(c_siniestro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_garantia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_garantia))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(b_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(b_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void t_siniestroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_siniestroActionPerformed
        // TODO add your handling code here:
        t_poliza.requestFocus();
    }//GEN-LAST:event_t_siniestroActionPerformed

    private void t_polizaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_polizaActionPerformed
        // TODO add your handling code here:
        t_inciso.requestFocus();
    }//GEN-LAST:event_t_polizaActionPerformed

    private void t_incisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_incisoActionPerformed
        // TODO add your handling code here:
        this.t_reporte.requestFocus();
    }//GEN-LAST:event_t_incisoActionPerformed

    private void t_reporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_reporteActionPerformed
        // TODO add your handling code here:
        b_fecha_siniestro.requestFocus();
    }//GEN-LAST:event_t_reporteActionPerformed

    private void b_buscar_aseguradoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_buscar_aseguradoraActionPerformed
        // TODO add your handling code here:
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);
        
        buscaCompania obj = new buscaCompania(new javax.swing.JFrame(), true, this.sessionPrograma, this.usr);
        obj.t_busca.requestFocus();
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        obj.setLocation((d.width/2)-(obj.getWidth()/2), (d.height/2)-(obj.getHeight()/2));
        obj.setVisible(true);
        
        Compania actor=obj.getReturnStatus();
        if(actor!=null)
        {
            t_aseguradora.setText(actor.getIdCompania().toString());
            l_nombre_aseguradora.setText(actor.getNombre());
        }
        else
        {
            t_aseguradora.setText("");
            l_nombre_aseguradora.setText("Selecciones una aseguradora");
        }
        t_siniestro.requestFocus();
    }//GEN-LAST:event_b_buscar_aseguradoraActionPerformed

    private void p_fotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_fotoMouseClicked
        // TODO add your handling code here:
        JFileChooser selector=new JFileChooser();
        selector.setFileFilter(new ExtensionFileFilter("JPG and JPEG", new String[] { "JPG", "JPEG" }));
             int estado=1;
             estado=selector.showOpenDialog(null);
             if(estado==0)
             {
                 archivo=selector.getSelectedFile();
                 try
                 {
                    if(archivo.exists())
                    {
                        String ruta=archivo.getPath();
                        p_foto.removeAll();
                        p_foto.add(new Imagen(ruta, 128, 168, 4, 4, 128,168));
                        p_foto.repaint();
                        entro_foto=1;
                    }
                    else
                    {
                        javax.swing.JOptionPane.showMessageDialog(null, "No se pudo cargar la imagen");
                    }
                 }catch(Exception e){}
             }
    }//GEN-LAST:event_p_fotoMouseClicked

    private void t_siniestroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_siniestroKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_siniestro.getText().length()>=20)
            evt.consume();
    }//GEN-LAST:event_t_siniestroKeyTyped

    private void t_polizaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_polizaKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_poliza.getText().length()>=20) 
            evt.consume();
    }//GEN-LAST:event_t_polizaKeyTyped

    private void t_reporteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_reporteKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_reporte.getText().length()>=19) 
            evt.consume();
    }//GEN-LAST:event_t_reporteKeyTyped

    private void t_incisoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_incisoKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_inciso.getText().length()>=13) 
            evt.consume();
    }//GEN-LAST:event_t_incisoKeyTyped

    private void b_fecha_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_fecha_clienteActionPerformed
        // TODO add your handling code here:
        calendario cal =new calendario(new javax.swing.JFrame(), true, true);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        cal.setLocation((d.width/2)-(cal.getWidth()/2), (d.height/2)-(cal.getHeight()/2));
        cal.setVisible(true);

        Calendar miCalendario=cal.getReturnStatus();
        if(miCalendario!=null)
        {
            String dia=Integer.toString(miCalendario.get(Calendar.DATE));
            String mes = Integer.toString(miCalendario.get(Calendar.MONTH)+1);
            String anio = Integer.toString(miCalendario.get(Calendar.YEAR));
            String hora = Integer.toString(miCalendario.get(Calendar.HOUR_OF_DAY));
            String minuto = Integer.toString(miCalendario.get(Calendar.MINUTE));
            String segundo = Integer.toString(miCalendario.get(Calendar.SECOND));
            t_fecha_cliente.setText(dia+"-"+mes+"-"+anio+" "+hora+":"+minuto+":"+segundo);
        }
        else
            t_fecha_cliente.setText("DD-MM-AAAA HH:MM:SS");
        b_buscarh.requestFocus();
    }//GEN-LAST:event_b_fecha_clienteActionPerformed

    private void b_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_guardarActionPerformed
        // TODO add your handling code here:
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);

        if(t_aseguradora.getText().compareTo("")!=0)
        {
            if(t_nombre_cliente.getText().compareTo("")!=0)
            {
                if(l_id_cliente.getText().compareTo("")!=0)
                {
                    if(t_tipo.getText().compareTo("")!=0)
                    {
                        if(t_marca.getText().compareTo("")!=0)
                        {
                            if(t_modelo.getText().compareTo("")!=0)
                            {
                                //**********Almacenamos el Registro*******************
                                registro = new Orden();
                                Compania aseguradora = new Compania();
                                Clientes cliente =new Clientes();
                                Tipo unidad_tipo = new Tipo();
                                Marca mr =new Marca();
                                aseguradora.setIdCompania(Integer.parseInt(t_aseguradora.getText()));
                                registro.setCompania(aseguradora);

                                if(t_siniestro.getText().compareTo("")!=0)
                                    registro.setSiniestro(t_siniestro.getText());

                                if(t_poliza.getText().compareTo("")!=0)
                                    registro.setPoliza(t_poliza.getText());

                                if(t_reporte.getText().compareTo("")!=0)
                                    registro.setNoReporte(t_reporte.getText());

                                if(t_inciso.getText().compareTo("")!=0)
                                    registro.setInciso(t_inciso.getText());

                                if(t_fecha_siniestro.getText().compareTo("DD-MM-AAAA")!=0)
                                {
                                    String [] campos = t_fecha_siniestro.getText().split("-");
                                    Calendar calendario = Calendar.getInstance();
                                    calendario.set(Calendar.MONTH, Integer.parseInt(campos[1])-1);
                                    calendario.set(Calendar.YEAR, Integer.parseInt(campos[2]));
                                    calendario.set(Calendar.DAY_OF_MONTH, Integer.parseInt(campos[0]));
                                    registro.setFechaSiniestro(calendario.getTime());
                                }

                                if(t_tipo.getText().compareTo("")!=0)
                                {
                                    unidad_tipo.setTipoNombre(t_tipo.getText());
                                    registro.setTipo(unidad_tipo);
                                }

                                if(t_marca.getText().compareTo("")!=0)
                                {
                                    mr.setIdMarca(t_marca.getText());
                                    registro.setMarca(mr);
                                }

                                if(t_motor.getText().compareTo("")!=0)
                                    registro.setNoMotor(t_motor.getText());

                                if(t_placas.getText().compareTo("")!=0)
                                    registro.setNoPlacas(t_placas.getText());

                                if(t_modelo.getText().compareTo("")!=0)
                                    registro.setModelo(Integer.parseInt(t_modelo.getText()));

                                if(t_serie.getText().compareTo("")!=0)
                                    registro.setNoSerie(t_serie.getText());

                                if(t_economico.getText().compareTo("")!=0)
                                    registro.setNoEconomico(t_economico.getText());

                                if(t_nombre_cliente.getText().compareTo("")!=0)
                                {
                                    cliente.setIdClientes(Integer.parseInt(l_id_cliente.getText()));
                                    registro.setClientes(cliente);
                                }

                                if(t_fecha_interna.getText().compareTo("DD-MM-AAAA HH:MM:SS")!=0)
                                {
                                    String [] cadena = t_fecha_interna.getText().split(" ");
                                    String [] fecha = cadena[0].split("-");
                                    String [] hora = cadena[1].split(":");

                                    Calendar calendario1 = Calendar.getInstance();
                                    calendario1.set(Calendar.MONTH, Integer.parseInt(fecha[1])-1);
                                    calendario1.set(Calendar.YEAR, Integer.parseInt(fecha[2]));
                                    calendario1.set(Calendar.DAY_OF_MONTH, Integer.parseInt(fecha[0]));
                                    calendario1.set(Calendar.HOUR_OF_DAY, Integer.parseInt(hora[0]));
                                    calendario1.set(Calendar.MINUTE, Integer.parseInt(hora[1]));
                                    calendario1.set(Calendar.SECOND, Integer.parseInt(hora[2]));

                                    registro.setFechaTaller(calendario1.getTime());
                                }

                                if(t_fecha_cliente.getText().compareTo("DD-MM-AAAA HH:MM:SS")!=0)
                                {
                                    String [] cadena = t_fecha_cliente.getText().split(" ");
                                    String [] fecha = cadena[0].split("-");
                                    String [] hora = cadena[1].split(":");

                                    Calendar calendario2 = Calendar.getInstance();
                                    calendario2.set(Calendar.MONTH, Integer.parseInt(fecha[1])-1);
                                    calendario2.set(Calendar.YEAR, Integer.parseInt(fecha[2]));
                                    calendario2.set(Calendar.DAY_OF_MONTH, Integer.parseInt(fecha[0]));
                                    calendario2.set(Calendar.HOUR_OF_DAY, Integer.parseInt(hora[0]));
                                    calendario2.set(Calendar.MINUTE, Integer.parseInt(hora[1]));
                                    calendario2.set(Calendar.SECOND, Integer.parseInt(hora[2]));

                                    registro.setFechaCliente(calendario2.getTime());
                                }

                                
                                //**********guardamos en estatus de la orden******************
                                String [] campos = t_fecha_estatus.getText().split("-");
                                Calendar calendario3 = Calendar.getInstance();
                                calendario3.set(Calendar.MONTH, Integer.parseInt(campos[1])-1);
                                calendario3.set(Calendar.YEAR, Integer.parseInt(campos[2]));
                                calendario3.set(Calendar.DAY_OF_MONTH, Integer.parseInt(campos[0]));

                                registro.setFechaEstatus(calendario3.getTime());
                                registro.setValesConsumibles(0.0);

                                Estatus est = new Estatus();
                                est.setEstatusNombre(c_estatus.getSelectedItem().toString());
                                registro.setEstatus(est);
                                
                                //***************************************************************

                                int opcion=cb_tipo_cliente.getSelectedIndex()+1;
                                    registro.setTipoCliente(""+opcion);

                                registro.setCiclo(new Ciclo(Integer.parseInt(periodo)));
                                //************Guardamos el usuario que apertura*****************
                                calendario3 = Calendar.getInstance();
                                registro.setHora(calendario3.getTime());
                                registro.setFecha(calendario3.getTime());
                                registro.setUsuarioByIdUserApertura(usr);
                                
                                registro.setRefAutorizadas(0d);
                                registro.setRefPresupuesto(0d);
                                registro.setMoDirecta(0d);
                                registro.setMoPresupuestada(0d);
                                registro.setAutorizadoFacturar(false);
                                registro.setDeducible(0.0d);
                                registro.setDemerito(0.0d);
                                registro.setKm(t_km.getText().trim());
                                registro.setColor(t_color.getText());
                                registro.setContratante("ASEGURADO");
                                registro.setCodigoAsegurado("0");
                                registro.setVales(0.0d);
                                registro.setPHojalateria(0.0d);
                                registro.setPMecanica(0.0d);
                                registro.setPSuspension(0.0d);
                                registro.setPElectrico(0.0d);
                                registro.setPPintura(0.0d);
                                registro.setDHojalateria(false);
                                registro.setDMecanica(false);
                                registro.setDSuspension(false);
                                registro.setDElectrico(false);
                                registro.setDPintura(false);
                                
                                if(id_ajustador.compareTo("")!=0)
                                {
                                    Ajustador ajustador=new Ajustador();
                                    ajustador.setIdAjustador(Integer.parseInt(id_ajustador));
                                    registro.setAjustador(ajustador);
                                }
                                else
                                    registro.setAjustador(null);
                                
                                if(id_agente.compareTo("")!=0)
                                {
                                    Agente agente=new Agente();
                                    agente.setIdAgente(Integer.parseInt(id_agente));
                                    registro.setAgente(agente);
                                }
                                
                                if(id_tecnico.compareTo("")!=0)
                                {
                                    Empleado emp=new Empleado();
                                    emp.setIdEmpleado(Integer.parseInt(id_tecnico));
                                    registro.setEmpleadoByRTecnico(emp);
                                }
                                registro.setGarantia(t_garantia.getText());
                                
                                Integer respuesta=guardarOrden(registro);

                                if(respuesta!=null)
                                {
                                    borra();
                                    JOptionPane.showMessageDialog(null, "¡La orden No:"+respuesta+" se ha guardado");
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, "¡Error al guardar!");
                                    t_tipo.requestFocus();
                                }

                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null, "¡Debe ingresar un modelo!");
                                t_modelo.requestFocus();
                            }
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "¡Debe seleccionar una marca!");
                            t_marca.requestFocus();
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "¡Debe seleccionar un tipo de unidad!");
                        t_tipo.requestFocus();
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "¡Debe guardar primero el cliente!");
                    b_guardar_cliente.requestFocus();
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "¡Debe introducir un cliente!");
                b_busca_cliente.requestFocus();
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "¡Debe introducir numero de aseguradora!");
            t_aseguradora.requestFocus();
        }
        b_cancelar.requestFocus();
    }//GEN-LAST:event_b_guardarActionPerformed

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        // TODO add your handling code here:
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);

        int opt=JOptionPane.showConfirmDialog(this, "¡Los datos capturados se eliminaran!");
        System.out.println(opt);
        if(opt==0)
            borra();
    }//GEN-LAST:event_b_cancelarActionPerformed

    private void c_estatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_estatusActionPerformed
        // TODO add your handling code here:
        Date fecha = new Date();
        DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        t_fecha_estatus.setText(dateFormat.format(fecha));
        c_siniestro.requestFocus();
    }//GEN-LAST:event_c_estatusActionPerformed

    private void t_economicoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_economicoKeyTyped
        // TODO add your handling code here:char car = evt.getKeyChar();
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_economico.getText().length()>=15)
            evt.consume();
    }//GEN-LAST:event_t_economicoKeyTyped

    private void t_economicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_economicoActionPerformed
        // TODO add your handling code here:
        t_modelo.requestFocus();
    }//GEN-LAST:event_t_economicoActionPerformed

    private void t_serieKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_serieKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_serie.getText().length()>=20)
            evt.consume();
    }//GEN-LAST:event_t_serieKeyTyped

    private void t_serieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_serieActionPerformed
        // TODO add your handling code here:
        t_motor.requestFocus();
    }//GEN-LAST:event_t_serieActionPerformed

    private void t_placasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_placasKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_placas.getText().length()>=8)
            evt.consume();
    }//GEN-LAST:event_t_placasKeyTyped

    private void t_placasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_placasActionPerformed
        // TODO add your handling code here:
        t_economico.requestFocus();
    }//GEN-LAST:event_t_placasActionPerformed

    private void t_motorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_motorKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_motor.getText().length()>=15)
            evt.consume();
    }//GEN-LAST:event_t_motorKeyTyped

    private void t_motorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_motorActionPerformed
        // TODO add your handling code here:
        t_placas.requestFocus();
    }//GEN-LAST:event_t_motorActionPerformed

    private void b_marcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_marcaActionPerformed
        // TODO add your handling code here:
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);

        buscaMarca obj = new buscaMarca(new javax.swing.JFrame(), true, this.sessionPrograma, this.usr, false);
        obj.t_busca.requestFocus();
        obj.formatoTabla();
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        obj.setLocation((d.width/2)-(obj.getWidth()/2), (d.height/2)-(obj.getHeight()/2));
        obj.setVisible(true);

        Marca actor=obj.getReturnStatus();
        if(actor!=null)
        {
            l_nombre_marca.setText(actor.getMarcaNombre());
            t_marca.setText(actor.getIdMarca());
        }
        else
        {
            l_nombre_marca.setText("Seleccione una marca");
            t_marca.setText("");
        }
        b_tipo.requestFocus();
    }//GEN-LAST:event_b_marcaActionPerformed

    private void b_tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_tipoActionPerformed
        // TODO add your handling code here:
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);

        buscaTipo obj = new buscaTipo(new javax.swing.JFrame(), true, this.sessionPrograma, this.usr);
        obj.t_busca.requestFocus();
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        obj.setLocation((d.width/2)-(obj.getWidth()/2), (d.height/2)-(obj.getHeight()/2));
        obj.setVisible(true);

        String actor=obj.getReturnStatus();
        if(actor!=null)
            t_tipo.setText(actor);
        else
            t_tipo.setText("");
        t_serie.requestFocus();
    }//GEN-LAST:event_b_tipoActionPerformed

    private void t_tipoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_tipoKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_tipo.getText().length()>=10)
            evt.consume();
    }//GEN-LAST:event_t_tipoKeyTyped

    private void t_tipoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_tipoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_t_tipoFocusLost

    private void t_tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_tipoActionPerformed
        // TODO add your handling code here:
        t_tipo.setText(t_tipo.getText().toUpperCase());
    }//GEN-LAST:event_t_tipoActionPerformed

    private void b_fecha_internaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_fecha_internaActionPerformed
        // TODO add your handling code here:
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);

        calendario cal =new calendario(new javax.swing.JFrame(), true, true);
        Calendar hoy=Calendar.getInstance();
        cal.p_fecha.setCurrent(hoy);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        cal.setLocation((d.width/2)-(cal.getWidth()/2), (d.height/2)-(cal.getHeight()/2));
        cal.setVisible(true);

        Calendar miCalendario=cal.getReturnStatus();
        if(miCalendario!=null)
        {
            String dia=Integer.toString(miCalendario.get(Calendar.DATE));;
            String mes = Integer.toString(miCalendario.get(Calendar.MONTH)+1);
            String anio = Integer.toString(miCalendario.get(Calendar.YEAR));
            String hora = Integer.toString(miCalendario.get(Calendar.HOUR_OF_DAY));
            String minuto = Integer.toString(miCalendario.get(Calendar.MINUTE));
            String segundo = Integer.toString(miCalendario.get(Calendar.SECOND));
            t_fecha_interna.setText(dia+"-"+mes+"-"+anio+" "+hora+":"+minuto+":"+segundo);
        }
        else
        t_fecha_interna.setText("DD-MM-AAAA HH:MM:SS");
        b_fecha_cliente.requestFocus();
    }//GEN-LAST:event_b_fecha_internaActionPerformed

    private void t_siniestroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_siniestroFocusLost
        // TODO add your handling code here:
        if(t_siniestro.getText().length()>20)
            t_siniestro.setText(t_siniestro.getText().substring(0, 20));
    }//GEN-LAST:event_t_siniestroFocusLost

    private void t_polizaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_polizaFocusLost
        // TODO add your handling code here:
        if(t_poliza.getText().length()>20)
            t_poliza.setText(t_poliza.getText().substring(0, 20));
    }//GEN-LAST:event_t_polizaFocusLost

    private void t_reporteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_reporteFocusLost
        // TODO add your handling code here:
        if(t_reporte.getText().length()>19)
            t_reporte.setText(t_reporte.getText().substring(0, 19));
    }//GEN-LAST:event_t_reporteFocusLost

    private void t_incisoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_incisoFocusLost
        // TODO add your handling code here:
        if(t_inciso.getText().length()>10)
            t_inciso.setText(t_inciso.getText().substring(0, 10));
    }//GEN-LAST:event_t_incisoFocusLost

    private void t_placasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_placasFocusLost
        // TODO add your handling code here:
        if(t_placas.getText().length()>8)
            t_placas.setText(t_placas.getText().substring(0, 8));
    }//GEN-LAST:event_t_placasFocusLost

    private void t_motorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_motorFocusLost
        // TODO add your handling code here:
        if(t_motor.getText().length()>15)
            t_motor.setText(t_motor.getText().substring(0, 15));
    }//GEN-LAST:event_t_motorFocusLost

    private void t_serieFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_serieFocusLost
        // TODO add your handling code here:
        if(t_serie.getText().length()>20)
            t_serie.setText(t_serie.getText().substring(0, 20));
    }//GEN-LAST:event_t_serieFocusLost

    private void t_economicoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_economicoFocusLost
        // TODO add your handling code here:
        if(t_economico.getText().length()>15)
            t_economico.setText(t_economico.getText().substring(0, 15));
    }//GEN-LAST:event_t_economicoFocusLost

    private void t_modeloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_modeloFocusLost
        // TODO add your handling code here:
        if(t_modelo.getText().length()>4)
        {
            t_modelo.setText(t_modelo.getText().substring(0, 4));
            try{
                t_modelo.commitEdit();
            }catch(Exception e){}
        }
    }//GEN-LAST:event_t_modeloFocusLost

    private void t_kmFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_kmFocusLost
        // TODO add your handling code here:
        if(t_km.getText().length()>10)
            t_km.setText(t_km.getText().substring(0, 10));
    }//GEN-LAST:event_t_kmFocusLost

    private void t_kmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_kmActionPerformed
        // TODO add your handling code here:
        t_color.requestFocus();
    }//GEN-LAST:event_t_kmActionPerformed

    private void t_kmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_kmKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_km.getText().length()>=10)
            evt.consume();
    }//GEN-LAST:event_t_kmKeyTyped

    private void t_colorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_colorFocusLost
        // TODO add your handling code here:
        if(t_color.getText().length()>20)
            t_color.setText(t_color.getText().substring(0, 19));
    }//GEN-LAST:event_t_colorFocusLost

    private void t_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_colorActionPerformed
        // TODO add your handling code here:
        cb_tipo_cliente.requestFocus();
    }//GEN-LAST:event_t_colorActionPerformed

    private void t_colorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_colorKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_color.getText().length()>=20)
            evt.consume();
    }//GEN-LAST:event_t_colorKeyTyped

    private void b_buscarhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_buscarhActionPerformed
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);
        buscaEmpleado obj = new buscaEmpleado(new javax.swing.JFrame(), true, usr, this.sessionPrograma, false);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        obj.setLocation((d.width/2)-(obj.getWidth()/2), (d.height/2)-(obj.getHeight()/2));
        obj.setVisible(true);
        Empleado actor=obj.getReturnStatus();
        if(actor!=null)
        {
            id_tecnico=""+actor.getIdEmpleado();
            t_tecnico.setText(actor.getNombre());
        }
        else
        {
            id_tecnico="";
            t_tecnico.setText("");
        }
        c_estatus.requestFocus();
    }//GEN-LAST:event_b_buscarhActionPerformed

    private void b_ajustadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_ajustadorActionPerformed
        // TODO add your handling code here:
        buscaAjustadores obj = new buscaAjustadores(new javax.swing.JFrame(), true, this.sessionPrograma, this.usr);
        obj.t_busca.requestFocus();
        obj.formatoTabla();
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        obj.setLocation((d.width/2)-(obj.getWidth()/2), (d.height/2)-(obj.getHeight()/2));
        obj.setVisible(true);

        List actor=obj.getReturnStatus();
        if(actor!=null)
        {
            id_ajustador=actor.get(0).toString();
            t_ajustador.setText(actor.get(1).toString());
        }
        else
        {
            id_ajustador="";
            t_ajustador.setText("");
        }
        b_agente.requestFocus();
    }//GEN-LAST:event_b_ajustadorActionPerformed

    private void b_agenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_agenteActionPerformed
        // TODO add your handling code here:
        buscaAgentes obj = new buscaAgentes(new javax.swing.JFrame(), true, this.sessionPrograma, this.usr);
        obj.t_busca.requestFocus();
        obj.formatoTabla();
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        obj.setLocation((d.width/2)-(obj.getWidth()/2), (d.height/2)-(obj.getHeight()/2));
        obj.setVisible(true);

        List actor=obj.getReturnStatus();
        if(actor!=null)
        {
            id_agente=actor.get(0).toString();
            t_agente.setText(actor.get(1).toString());
        }
        else
        {
            id_agente="";
            t_agente.setText("");
        }
        b_busca_cliente.requestFocus();
    }//GEN-LAST:event_b_agenteActionPerformed

    private void b_fecha_siniestroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_fecha_siniestroActionPerformed
        // TODO add your handling code here:
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);

        calendario cal =new calendario(new javax.swing.JFrame(), true, false);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        cal.setLocation((d.width/2)-(cal.getWidth()/2), (d.height/2)-(cal.getHeight()/2));
        cal.setVisible(true);

        Calendar miCalendario=cal.getReturnStatus();
        if(miCalendario!=null)
        {
            String dia=Integer.toString(miCalendario.get(Calendar.DATE));;
            String mes = Integer.toString(miCalendario.get(Calendar.MONTH)+1);
            String anio = Integer.toString(miCalendario.get(Calendar.YEAR));
            t_fecha_siniestro.setText(dia+"-"+mes+"-"+anio);
            b_busca_cliente.requestFocus();
        }
        else
        t_fecha_siniestro.setText("DD-MM-AAAA");
        b_ajustador.requestFocus();
    }//GEN-LAST:event_b_fecha_siniestroActionPerformed

    private void b_guardar_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_guardar_clienteActionPerformed
        // TODO add your handling code here:
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);
        if(t_nombre_cliente.getText().compareTo("")==0)
        {
            JOptionPane.showMessageDialog(null, "¡Debe introducir el nombre del cliente!");
            t_nombre_cliente.requestFocus();
        }
        else
        {
            if(this.t_email_cliente.getText().compareTo("")==0)
            {
                JOptionPane.showMessageDialog(null, "¡Debe introducir el email del cliente!");
                t_email_cliente.requestFocus();
            }
            else
            {
                Session session = HibernateUtil.getSessionFactory().openSession();
                if(this.l_id_cliente.getText().compareToIgnoreCase("")==0)
                {
                    if(consultaCliente("from Clientes obj where obj.nombre='"+t_nombre_cliente.getText()+"'", session)==false)
                    {
                        Clientes nuevoCliente = new Clientes();
                        nuevoCliente.setNombre(this.t_nombre_cliente.getText());
                        nuevoCliente.setRfc(this.t_rfc_cliente.getText());
                        if(this.t_cp_cliente.getText().compareTo("")!=0)
                            nuevoCliente.setCp(Integer.parseInt(this.t_cp_cliente.getText()));
                        nuevoCliente.setDireccion(this.t_direccion_cliente.getText());
                        nuevoCliente.setNumeroExterior(this.t_numero_cliente.getText());
                        nuevoCliente.setEstado(this.cb_edo_cliente.getSelectedItem().toString());
                        nuevoCliente.setMunicipio(this.t_municipio_cliente.getText());
                        nuevoCliente.setPoblacion(this.t_poblacion_cliente.getText());
                        nuevoCliente.setColonia(this.t_colonia_cliente.getText());
                        nuevoCliente.setContacto(t_contacto_cliente.getText());
                        nuevoCliente.setEmail(t_email_cliente.getText());
                        nuevoCliente.setTelefono(t_telefono_cliente.getText());
                        nuevoCliente.setPais("MX");

                        try 
                        {
                            session.beginTransaction().begin();
                            session.save(nuevoCliente);
                            l_id_cliente.setText(nuevoCliente.getIdClientes().toString());
                            session.getTransaction().commit();
                            JOptionPane.showMessageDialog(null, "¡El Cliente se ha guardado!");
                            this.b_buscarh.requestFocus();
                        } 
                        catch (HibernateException he) 
                        {
                            he.printStackTrace();
                            session.getTransaction().rollback();
                            
                            JOptionPane.showMessageDialog(null, "¡Error al guardar!");
                            t_tipo.requestFocus();
                        }
                        finally
                        {
                            if(session!=null)
                                if(session.isOpen())
                                    session.close();
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "¡En nombre del cliente ya existe!");
                        t_nombre_cliente.requestFocus();
                    }
                }
                else
                {
                    try
                    {
                        session.beginTransaction();
                        if(consultaCliente("from Clientes obj where obj.nombre='"+t_nombre_cliente.getText()+"' and obj.idClientes!="+l_id_cliente.getText(), session)==false)
                        {
                            Clientes objeto = (Clientes)session.get(Clientes.class, Integer.parseInt(l_id_cliente.getText()));
                            objeto.setNombre(this.t_nombre_cliente.getText());
                            objeto.setRfc(this.t_rfc_cliente.getText());
                            if(this.t_cp_cliente.getText().compareTo("")!=0)
                                objeto.setCp(Integer.parseInt(this.t_cp_cliente.getText()));
                            objeto.setDireccion(this.t_direccion_cliente.getText());
                            objeto.setNumeroExterior(this.t_numero_cliente.getText());
                            objeto.setEstado(this.cb_edo_cliente.getSelectedItem().toString());
                            objeto.setMunicipio(this.t_municipio_cliente.getText());
                            objeto.setPoblacion(this.t_poblacion_cliente.getText());
                            objeto.setColonia(this.t_colonia_cliente.getText());
                            objeto.setContacto(t_contacto_cliente.getText());
                            objeto.setEmail(t_email_cliente.getText());
                            objeto.setTelefono(t_telefono_cliente.getText());
                            session.update(objeto);
                            session.getTransaction().commit();
                            JOptionPane.showMessageDialog(null, "¡Datos Actualizados!");  
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "¡No se pueden guardar nombres duplicados!");  
                        }
                    }
                    catch (HibernateException he)
                    {
                        he.printStackTrace(); 
                        System.out.println(he.hashCode());
                        session.getTransaction().rollback();
                    }
                    finally
                    {
                        if(session.isOpen())
                            session.close();
                    }
                }
            }
        }
        b_fecha_interna.requestFocus();
    }//GEN-LAST:event_b_guardar_clienteActionPerformed

    private void b_nuevo_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_nuevo_clienteActionPerformed
        // TODO add your handling code here:
        this.t_nombre_cliente.setText("");
        this.t_rfc_cliente.setText("");
        this.t_cp_cliente.setText("");
        this.t_direccion_cliente.setText("");
        this.t_numero_cliente.setText("");
        this.cb_edo_cliente.setSelectedItem("ESTADO DE MÉXICO");
        this.t_municipio_cliente.setText("");
        this.t_poblacion_cliente.setText("");
        this.t_colonia_cliente.setText("");
        this.t_contacto_cliente.setText("");
        this.t_email_cliente.setText("");
        this.t_telefono_cliente.setText("");
        this.t_telefono_cliente.setValue(null);
        l_id_cliente.setText("");
        this.t_nombre_cliente.requestFocus();
    }//GEN-LAST:event_b_nuevo_clienteActionPerformed

    private void b_busca_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_busca_clienteActionPerformed
        // TODO add your handling code here:
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);

        buscaCliente obj = new buscaCliente(new javax.swing.JFrame(), true);
        obj.t_busca.requestFocus();
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        obj.setLocation((d.width/2)-(obj.getWidth()/2), (d.height/2)-(obj.getHeight()/2));
        obj.setVisible(true);

        Clientes actor=obj.getReturnStatus();
        
        b_nuevo_clienteActionPerformed(null);
        if(actor!=null)
        {
            this.l_id_cliente.setText(actor.getIdClientes().toString());
            this.t_nombre_cliente.setText(actor.getNombre());
            try{
                this.t_rfc_cliente.setText(actor.getRfc());
            }catch(Exception e){}
            
            try{
                if(actor.getCp()!=null)
                    this.t_cp_cliente.setText(""+actor.getCp());
            }catch(Exception e){}
            
            try{
                this.t_direccion_cliente.setText(actor.getDireccion());
            }catch(Exception e){}

            try{
                this.t_numero_cliente.setText(actor.getNumeroExterior());
            }catch(Exception e){}
            
            try{
                this.cb_edo_cliente.setSelectedItem(actor.getEstado());
            }catch(Exception e){}
            
            try{
                this.t_municipio_cliente.setText(actor.getMunicipio());
            }catch(Exception e){}
            
            try{
                this.t_poblacion_cliente.setText(actor.getPoblacion());
            }catch(Exception e){}
            
            try{
                this.t_colonia_cliente.setText(actor.getColonia());
            }catch(Exception e){}
            
            try{
                t_contacto_cliente.setText(actor.getContacto());
            }catch(Exception e){}

            try{
                t_email_cliente.setText(actor.getEmail());
            }catch(Exception e){}

            try{
                t_telefono_cliente.setText(actor.getTelefono());
            }catch(Exception e){}
        }
        b_nuevo_cliente.requestFocus();
    }//GEN-LAST:event_b_busca_clienteActionPerformed

    private void t_telefono_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_telefono_clienteKeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        if(t_telefono_cliente.getText().length()>=13)
            evt.consume();
        if((car<'0' || car>'9'))
            evt.consume();
    }//GEN-LAST:event_t_telefono_clienteKeyTyped

    private void t_telefono_clienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_telefono_clienteFocusLost
        // TODO add your handling code here:
        if(t_telefono_cliente.getText().length()>13)
        {
            t_telefono_cliente.setText(t_telefono_cliente.getText().substring(0, 13));
            try{
                t_telefono_cliente.commitEdit();
            }catch(Exception e){}
        }
    }//GEN-LAST:event_t_telefono_clienteFocusLost

    private void t_email_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_email_clienteKeyTyped
        char car = evt.getKeyChar();
        if(t_email_cliente.getText().length()>=100)
        evt.consume();
    }//GEN-LAST:event_t_email_clienteKeyTyped

    private void t_email_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_email_clienteActionPerformed
        b_guardar_cliente.requestFocus();
    }//GEN-LAST:event_t_email_clienteActionPerformed

    private void t_email_clienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_email_clienteFocusLost
        // TODO add your handling code here:
        if(t_email_cliente.getText().length()>100)
            t_email_cliente.setText(t_email_cliente.getText().substring(0, 100));
    }//GEN-LAST:event_t_email_clienteFocusLost

    private void t_contacto_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_contacto_clienteKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_contacto_cliente.getText().length()>=150)
            evt.consume();
    }//GEN-LAST:event_t_contacto_clienteKeyTyped

    private void t_contacto_clienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_contacto_clienteFocusLost
        // TODO add your handling code here:
        if(t_contacto_cliente.getText().length()>150)
            t_contacto_cliente.setText(t_contacto_cliente.getText().substring(0, 150));
    }//GEN-LAST:event_t_contacto_clienteFocusLost

    private void t_rfc_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_rfc_clienteKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        char car = evt.getKeyChar();
        if(t_rfc_cliente.getText().length()>=13)
        evt.consume();
    }//GEN-LAST:event_t_rfc_clienteKeyTyped

    private void t_rfc_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_rfc_clienteActionPerformed
        // TODO add your handling code here:
        t_contacto_cliente.requestFocus();
    }//GEN-LAST:event_t_rfc_clienteActionPerformed

    private void t_rfc_clienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_rfc_clienteFocusLost
        // TODO add your handling code here:
        if(t_rfc_cliente.getText().length()>13)
            t_rfc_cliente.setText(t_rfc_cliente.getText().substring(0, 13));
    }//GEN-LAST:event_t_rfc_clienteFocusLost

    private void t_direccion_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_direccion_clienteKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        char car = evt.getKeyChar();
        if(t_direccion_cliente.getText().length()>=150)
        evt.consume();
    }//GEN-LAST:event_t_direccion_clienteKeyTyped

    private void t_direccion_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_direccion_clienteActionPerformed
        // TODO add your handling code here:
        t_rfc_cliente.requestFocus();
    }//GEN-LAST:event_t_direccion_clienteActionPerformed

    private void t_direccion_clienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_direccion_clienteFocusLost
        // TODO add your handling code here:
        if(t_direccion_cliente.getText().length()>150)
            t_direccion_cliente.setText(t_direccion_cliente.getText().substring(0, 150));
    }//GEN-LAST:event_t_direccion_clienteFocusLost

    private void t_nombre_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_nombre_clienteKeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_nombre_cliente.getText().length()>=150)
        evt.consume();
    }//GEN-LAST:event_t_nombre_clienteKeyTyped

    private void t_nombre_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_nombre_clienteActionPerformed
        // TODO add your handling code here:
        t_direccion_cliente.requestFocus();
    }//GEN-LAST:event_t_nombre_clienteActionPerformed

    private void t_nombre_clienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_nombre_clienteFocusLost
        // TODO add your handling code here:
        if(t_nombre_cliente.getText().length()>150)
            t_nombre_cliente.setText(t_nombre_cliente.getText().substring(0, 150));
    }//GEN-LAST:event_t_nombre_clienteFocusLost

    private void t_numero_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_numero_clienteKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_numero_cliente.getText().length()>=10)
        evt.consume();
    }//GEN-LAST:event_t_numero_clienteKeyTyped

    private void t_cp_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_cp_clienteKeyTyped
        char car = evt.getKeyChar();
        if(this.t_cp_cliente.getText().length()>=5)
        evt.consume();
        if((car<'0' || car>'9'))
        evt.consume();
    }//GEN-LAST:event_t_cp_clienteKeyTyped

    private void t_municipio_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_municipio_clienteKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_municipio_cliente.getText().length()>=20)
        evt.consume();
    }//GEN-LAST:event_t_municipio_clienteKeyTyped

    private void t_poblacion_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_poblacion_clienteKeyTyped
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_poblacion_cliente.getText().length()>=150)
        evt.consume();
    }//GEN-LAST:event_t_poblacion_clienteKeyTyped

    private void t_colonia_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_colonia_clienteKeyTyped
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_colonia_cliente.getText().length()>=150)
        evt.consume();
    }//GEN-LAST:event_t_colonia_clienteKeyTyped

    private void t_telefono_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_telefono_clienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_telefono_clienteActionPerformed

    private void cb_garantiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_garantiaActionPerformed
        // TODO add your handling code here:
        if(cb_garantia.isSelected())
        {
            buscaOrden obj = new buscaOrden(new javax.swing.JFrame(), true, this.usr,0, configuracion);
            obj.t_busca.requestFocus();
            Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
            obj.setLocation((d.width/2)-(obj.getWidth()/2), (d.height/2)-(obj.getHeight()/2));
            obj.setVisible(true);        
            Orden orden_act=obj.getReturnStatus();
            if (orden_act!=null)
            {
                t_garantia.setText(""+orden_act.getIdOrden());
            }
            else
            {
                cb_garantia.setSelected(false);
                 t_garantia.setText("");
            }
        }
        else
        {
            t_garantia.setText("");
        }
        b_guardar.requestFocus();
    }//GEN-LAST:event_cb_garantiaActionPerformed

    private void t_modeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_modeloActionPerformed
        // TODO add your handling code here:
        t_km.requestFocus();
    }//GEN-LAST:event_t_modeloActionPerformed

    private void cb_tipo_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tipo_clienteActionPerformed
        // TODO add your handling code here:
        b_buscar_aseguradora.requestFocus();
    }//GEN-LAST:event_cb_tipo_clienteActionPerformed

    private void c_siniestroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_siniestroActionPerformed
        // TODO add your handling code here:
        cb_garantia.requestFocus();
    }//GEN-LAST:event_c_siniestroActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_agente;
    private javax.swing.JButton b_ajustador;
    private javax.swing.JButton b_busca_cliente;
    private javax.swing.JButton b_buscar_aseguradora;
    private javax.swing.JButton b_buscarh;
    private javax.swing.JButton b_cancelar;
    private javax.swing.JButton b_fecha_cliente;
    private javax.swing.JButton b_fecha_interna;
    private javax.swing.JButton b_fecha_siniestro;
    private javax.swing.JButton b_guardar;
    private javax.swing.JButton b_guardar_cliente;
    private javax.swing.JButton b_marca;
    private javax.swing.JButton b_nuevo_cliente;
    private javax.swing.JButton b_tipo;
    private javax.swing.JComboBox c_estatus;
    private javax.swing.JComboBox c_siniestro;
    public javax.swing.JComboBox cb_edo_cliente;
    private javax.swing.JCheckBox cb_garantia;
    private javax.swing.JComboBox cb_tipo_cliente;
    private datechooser.beans.DateChooserDialog dateChooserDialog1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel l_cliente;
    private javax.swing.JLabel l_colonia_cliente;
    private javax.swing.JLabel l_color;
    private javax.swing.JLabel l_contacto_cliente;
    private javax.swing.JLabel l_cp_cliente;
    private javax.swing.JLabel l_direccion_cliente;
    private javax.swing.JLabel l_economico;
    private javax.swing.JLabel l_edo_cliente;
    private javax.swing.JLabel l_email_cliente;
    private javax.swing.JLabel l_id_cliente;
    private javax.swing.JLabel l_km;
    private javax.swing.JLabel l_modelo;
    private javax.swing.JLabel l_motor;
    private javax.swing.JLabel l_municipio_cliente;
    private javax.swing.JLabel l_nombre;
    private javax.swing.JLabel l_nombre_aseguradora;
    private javax.swing.JLabel l_nombre_marca;
    private javax.swing.JLabel l_numero_cliente;
    private javax.swing.JLabel l_placas;
    private javax.swing.JLabel l_poblacion_cliente;
    private javax.swing.JLabel l_rfc_cliente;
    private javax.swing.JLabel l_serie;
    private javax.swing.JLabel l_telefono_cliente;
    private javax.swing.JPanel p_foto;
    private javax.swing.JTextField t_agente;
    private javax.swing.JTextField t_ajustador;
    public javax.swing.JTextField t_aseguradora;
    public javax.swing.JTextField t_colonia_cliente;
    private javax.swing.JTextField t_color;
    private javax.swing.JTextField t_contacto_cliente;
    public javax.swing.JTextField t_cp_cliente;
    private javax.swing.JTextField t_direccion_cliente;
    private javax.swing.JTextField t_economico;
    private javax.swing.JTextField t_email_cliente;
    private javax.swing.JTextField t_fecha_cliente;
    private javax.swing.JTextField t_fecha_estatus;
    private javax.swing.JTextField t_fecha_interna;
    private javax.swing.JTextField t_fecha_siniestro;
    private javax.swing.JTextField t_garantia;
    private javax.swing.JTextField t_inciso;
    private javax.swing.JTextField t_km;
    private javax.swing.JTextField t_marca;
    private javax.swing.JFormattedTextField t_modelo;
    private javax.swing.JTextField t_motor;
    public javax.swing.JTextField t_municipio_cliente;
    private javax.swing.JTextField t_nombre_cliente;
    public javax.swing.JTextField t_numero_cliente;
    private javax.swing.JTextField t_placas;
    public javax.swing.JTextField t_poblacion_cliente;
    private javax.swing.JTextField t_poliza;
    private javax.swing.JTextField t_reporte;
    private javax.swing.JTextField t_rfc_cliente;
    private javax.swing.JTextField t_serie;
    private javax.swing.JTextField t_siniestro;
    private javax.swing.JTextField t_tecnico;
    private javax.swing.JFormattedTextField t_telefono_cliente;
    private javax.swing.JTextField t_tipo;
    // End of variables declaration//GEN-END:variables


private Integer guardarOrden(Orden nueva)
{
    h=new Herramientas(usr, 0);
    Session session = HibernateUtil.getSessionFactory().openSession();
    Integer ID = null;
    try 
    {
        session.beginTransaction().begin();
        Object resp=session.createQuery("select max(obj.idOrden) from Orden obj where obj.ciclo.idCiclo="+this.periodo).uniqueResult();
        if(this.c_siniestro.getItemCount()>0)
        {
            Reparacion re = (Reparacion)session.createCriteria(Reparacion.class).add(Restrictions.eq("nombre", this.c_siniestro.getSelectedItem().toString())).setMaxResults(1).uniqueResult();
            nueva.setReparacion(re);
        }

        int id_nuevo=0;
        
        if(resp==null)
        {
            id_nuevo=nueva.getCiclo().getIdCiclo()*10000;
            id_nuevo+=1;
            nueva.setIdOrden(id_nuevo);
        }
        else
        {
            id_nuevo=(int) resp;
            id_nuevo+=1;
            nueva.setIdOrden(id_nuevo);
        }
        //**********si hay foto la guardamos
        if(entro_foto==1)
        {
            if(guardaFoto(id_nuevo))
            {
                Date fecha_orden = new Date();
                Foto img=new Foto(nueva, ""+id_nuevo+".jpg", fecha_orden);
                nueva.addFoto(img);
                
                ID=(Integer) session.save(nueva);
                session.getTransaction().commit();
                
                Orden aux = (Orden)session.get(Orden.class, ID);
                Empleado emp1 = aux.getEmpleadoByRTecnico();
                if(emp1!=null)
                {
                    emp1=(Empleado)session.get(Empleado.class, emp1.getIdEmpleado());
                    if(emp1.getEmail()!=null)
                    {
                        String mensaje="<p>Asignaci&oacute;n de Orden De Taller <strong>"+ID+"</strong></p><p>Saludos. </p>";
                        h.enviaCorreo("Asignaci&oacute;n OT("+ID+")", mensaje, emp1.getEmail()); 
                    }
                }
            }
        }
        else
        {
            ID=(Integer) session.save(nueva);
            session.getTransaction().commit();
            Orden aux=(Orden)session.get(Orden.class, ID);
            Empleado emp1=aux.getEmpleadoByRTecnico();
            if(emp1!=null)
            {
                emp1=(Empleado)session.get(Empleado.class, emp1.getIdEmpleado());
                if(emp1.getEmail()!=null)
                {
                    String mensaje="<p>Asignaci&oacute;n de Orden De Taller <strong>"+ID+"</strong></p><p>Saludos. </p>";
                    h.enviaCorreo("Asignaci&oacute;n OT("+ID+")", mensaje, emp1.getEmail()); 
                }
            }
        }
        
        Ftp miFtp=new Ftp();
        boolean respuesta=true;
        respuesta=miFtp.conectar(ruta, "compras", "04650077", 3310);
        if(respuesta==true)   
        {
            if(!miFtp.cambiarDirectorio("/ordenes/"+ID))
            {
                if(miFtp.crearDirectorio("/ordenes/"+ID))
                    miFtp.cambiarDirectorio("/ordenes/"+ID);
            }
            miFtp.desconectar();
        }
        return ID;   
    } 
    catch (HibernateException he) 
    {
        he.printStackTrace();
        session.getTransaction().rollback();
        return null;   
    }
    finally
    {
        if(session!=null)
            if(session.isOpen())
                session.close(); 
    }
}

private boolean guardaFoto(int no)
{
    try {        
        if(archivo.exists()==true)
        {
            Ftp miFtp=new Ftp();
            boolean respuesta=true;
            respuesta=miFtp.conectar(ruta, "compras", "04650077", 3310);
            if(respuesta==true)
            {   
                if(!miFtp.cambiarDirectorio("/ordenes/"+no))
                    if(miFtp.crearDirectorio("/ordenes/"+no))
                        miFtp.cambiarDirectorio("/ordenes/"+no);
                respuesta=miFtp.subirArchivo(archivo.getPath(), no+".jpg");

                File temp = File.createTempFile("tmp", ".jpg");
                String ruta=archivo.getPath();
                javax.swing.JPanel p=new Imagen(ruta, 385, 250, 0, 0, 385, 250);
                BufferedImage dibujo =new BufferedImage(385, 250, BufferedImage.TYPE_INT_RGB);
                Graphics g = dibujo.getGraphics();
                p.paint(g);
                ImageIO.write((RenderedImage)dibujo, "jpg", temp); // Salvar la imagen en el fichero

                if(!miFtp.cambiarDirectorio("/ordenes/"+no+"/miniatura"))
                {
                    miFtp.cambiarDirectorio(miFtp.raiz);
                    if(miFtp.crearDirectorio("/ordenes/"+no+"/miniatura"))
                        miFtp.cambiarDirectorio("/ordenes/"+no+"/miniatura");
                }
                respuesta=miFtp.subirArchivo(temp.getPath(), no+".jpg");
                temp.delete();

                miFtp.cambiarDirectorio("/");
                return true;
            }
        }
        return false;
    } 
    catch (Exception ioe)
    {
        ioe.printStackTrace();
        System.out.println("Error al guardar archivo.");
        return false;
    }
}

    public void cargaEstatus()
    {
        Session session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            Query q = session.createQuery("from Estatus es");
            List resultList = q.list();
            if(resultList.size()>0)
            {
                this.c_estatus.removeAllItems();
                for (Object o : resultList)
                {
                    Estatus actor = (Estatus) o;
                    c_estatus.addItem(actor.getEstatusNombre());
                }
            }
            
            q = session.createQuery("from Reparacion es");
            resultList = q.list();
            if(resultList.size()>0)
            {
                this.c_siniestro.removeAllItems();
                for (Object o : resultList)
                {
                    Reparacion actor = (Reparacion) o;
                    this.c_siniestro.addItem(actor.getNombre());
                }
            }
            
            usr = (Usuario)session.get(Usuario.class, usr.getIdUsuario());
            if(usr.getCrearClientes()==true)
            {
                this.b_nuevo_cliente.setEnabled(true);
                this.b_guardar_cliente.setEnabled(true);
            }
            else
            {
                this.b_nuevo_cliente.setEnabled(false);
                this.b_guardar_cliente.setEnabled(false);
            }
        }catch(Exception e)
        {
            System.out.println(e);
        }
        finally
        {
            if(session!=null)
                if(session.isOpen())
                    session.close();
        }
    }
    

    public boolean consultaCliente(String consulta, Session session)
    {
        boolean var=false;
        try
        {
            Query q = session.createQuery(consulta);
            List resultList = q.list();
            if(resultList.size()>0)
                return true;
            else
                return false;
        }catch(Exception e)
        {
            e.printStackTrace();
            return false;
        }
    }
    
    public void borra()
    {
        l_nombre_marca.setText("Seleccione una marca");
        t_marca.setText("");
        t_tipo.setText("");
        t_serie.setText("");
        t_motor.setText("");
        t_placas.setText("");
        t_economico.setText("");
        t_modelo.setText("");
        t_modelo.setValue(null);
        t_km.setText("");
        t_color.setText("");
        cb_tipo_cliente.setSelectedIndex(0);
        
        t_aseguradora.setText("");
        l_nombre_aseguradora.setText("Selecciones una aseguradora");
        t_siniestro.setText("");
        t_poliza.setText("");
        t_inciso.setText("");
        t_reporte.setText("");
        t_fecha_siniestro.setText("DD-MM-AAAA");
        t_ajustador.setText("");
        id_ajustador="";
        t_agente.setText("");
        id_agente="";
        
        
        t_nombre_cliente.setText("");
        t_rfc_cliente.setText("");
        t_cp_cliente.setText("");
        t_direccion_cliente.setText("");
        t_numero_cliente.setText("");
        cb_edo_cliente.setSelectedItem("ESTADO DE MÉXICO");
        t_municipio_cliente.setText("");
        t_poblacion_cliente.setText("");
        t_colonia_cliente.setText("");
        t_contacto_cliente.setText("");
        t_email_cliente.setText("");
        t_telefono_cliente.setText("");
        
        t_fecha_interna.setText("DD-MM-AAAA");
        t_fecha_cliente.setText("DD-MM-AAAA");
        
        t_tecnico.setText("");
        this.cargaEstatus();
        c_estatus.setSelectedItem(0);
        this.c_siniestro.setSelectedIndex(0);
        cb_garantia.setSelected(false);
        t_garantia.setText("");
        
        p_foto.removeAll();
        p_foto.add(new Imagen("imagenes/foto.png", 128, 168, 4, 4, 128,168));
        p_foto.repaint();
        entro_foto=0;
        
        Date fecha = new Date();
        DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        t_fecha_estatus.setText(dateFormat.format(fecha));
        b_marca.requestFocus();
    }
}