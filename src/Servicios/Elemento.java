/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Servicios;

import Hibernate.Util.HibernateUtil;
import Hibernate.entidades.Archivo;
import Hibernate.entidades.Orden;
import Integral.Ftp;
import java.awt.Desktop;
import java.io.File;
import javax.swing.JFileChooser;
import org.hibernate.Session;
import Integral.Herramientas;
import Integral.Imagen;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author I.S.C Salvador
 */
public class Elemento extends javax.swing.JPanel {

    /**
     * Creates new form Elemento
     */
    Archivo arch;
    private Session session;
    String orden;
    String ruta;
    
    public Elemento(Archivo miArchivo,String ord, String edo, String dir) {
        initComponents();
        orden=ord;
        arch=miArchivo;
        ruta=dir;
        String nombre=arch.getNombreDocumento();
        try
        {
            if(nombre.contains(".pdf") || nombre.contains(".PDF"))
                l_img.setIcon(new ImageIcon("imagenes/pdf.png"));
            else{
                if(nombre.contains(".doc") || nombre.contains(".DOC"))
                    l_img.setIcon(new ImageIcon("imagenes/word.png"));
                else{
                    if(nombre.contains(".xls") || nombre.contains(".xls"))
                        l_img.setIcon(new ImageIcon("imagenes/exel.png"));
                    else{
                        if(nombre.contains(".jpg") || nombre.contains(".JPG") || nombre.contains(".png") || nombre.contains(".PNG"))
                            l_img.setIcon(new ImageIcon("imagenes/imagen.png"));
                        else
                        {
                            l_img.setIcon(new ImageIcon("imagenes/desconocido.png"));
                        }
                    }
                }
            }
            l_nombre.setText(arch.getNombreDocumento());
            l_fecha.setText(""+arch.getFechaDocumento());
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        
        Herramientas h=new Herramientas(null, 0);
        if(h.isCerrada(orden)==true || edo.compareTo("")!=0)
            jMenuItem2.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popMenu = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jLabel3 = new javax.swing.JLabel();
        l_nombre = new javax.swing.JLabel();
        l_fecha = new javax.swing.JLabel();
        l_img = new javax.swing.JLabel();

        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        popMenu.add(jMenuItem1);

        jMenuItem2.setText("Eliminar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        popMenu.add(jMenuItem2);

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel3.setText("Fecha:");

        l_nombre.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        l_nombre.setText("nombre del archivo");

        l_fecha.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        l_fecha.setText("fecha del archivo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(l_img, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(l_nombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(l_fecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(l_nombre))
            .addComponent(l_img, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON3)
        {
            popMenu.show(evt.getComponent(), evt.getX(), evt.getY());
            popMenu.setVisible(true);
            evt.consume();
        }
        else
        {
            if (evt.getClickCount() == 2 && !evt.isConsumed()) 
            {
                evt.consume();
                Ftp miFtp=new Ftp();
                boolean respuesta=true;
                respuesta=miFtp.conectar(ruta, "compras", "04650077", 3310);
                if(respuesta==true)
                {
                    miFtp.cambiarDirectorio("/ordenes/"+orden+"/archivos/");
                    miFtp.AbrirArchivo(l_nombre.getText());
                    miFtp.desconectar();
                }
                else
                    JOptionPane.showMessageDialog(null, "No fue posible conectar al servidor FTP");
            }
        }
    }//GEN-LAST:event_formMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        try
        {
            Ftp miFtp=new Ftp();
            boolean respuesta=true;
            respuesta=miFtp.conectar(ruta, "compras", "04650077", 3310);
            if(respuesta==true)
            {
                miFtp.cambiarDirectorio("/ordenes/"+orden+"/archivos/");
                miFtp.AbrirArchivo(l_nombre.getText());
                miFtp.desconectar();
            }
            else
                JOptionPane.showMessageDialog(null, "No fue posible conectar al servidor FTP");
        }catch(Exception e)
        {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(null, "Error no se pudo abrir el archivo");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            session.beginTransaction().begin();
            Orden ord = (Orden)session.get(Orden.class, arch.getOrden().getIdOrden());
            arch= (Archivo)session.get(Archivo.class, arch.getIdArchivo());
            ord.eliminaArchivo(arch);
            session.update(ord);
            session.delete(arch);
            session.getTransaction().commit();
            
            Ftp miFtp=new Ftp();
            boolean respuesta=true;
            respuesta=miFtp.conectar(ruta, "compras", "04650077", 3310);
            if(respuesta==true)
            {
                miFtp.cambiarDirectorio("/ordenes/"+orden+"/archivos/");
                miFtp.borrarArchivo(l_nombre.getText());
                miFtp.desconectar();
            }
            else
                JOptionPane.showMessageDialog(null, "No fue posible conectar al servidor FTP");
            this.setVisible(false);
        }catch (Exception ioe)
        {
            session.getTransaction().rollback();
            ioe.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(null, "Error no se pudo borrar el archivo");
        }
        if(session!=null)
            if(session.isOpen())
                session.close(); 
    }//GEN-LAST:event_jMenuItem2ActionPerformed
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JLabel l_fecha;
    private javax.swing.JLabel l_img;
    private javax.swing.JLabel l_nombre;
    private javax.swing.JPopupMenu popMenu;
    // End of variables declaration//GEN-END:variables
}
